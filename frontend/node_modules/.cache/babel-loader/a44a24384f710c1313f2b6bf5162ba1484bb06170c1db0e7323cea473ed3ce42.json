{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\nconst planeIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\n  iconSize: [24, 24],\n  iconAnchor: [12, 12]\n});\n\n// Simple left sidebar (keeps previous behavior)\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane,\n  checkDestination\n}) {\n  _s();\n  const [inputs, setInputs] = useState({});\n  const handleInputChange = (plane, field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        [field]: value\n      }\n    }));\n  };\n  const handleCheck = plane => {\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\n    } else {\n      alert(\"Enter lat and lon for destination check\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-left\",\n    style: {\n      width: 280\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"/logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GeoShield\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card planes-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u2708 Active Planes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planes-list\",\n        children: [Object.keys(planes).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\",\n          children: \"No planes. Start simulation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 48\n        }, this), Object.keys(planes).map(plane => {\n          var _inputs$plane, _inputs$plane2;\n          const pos = planes[plane];\n          const info = speedETA[plane] || {};\n          const isSelected = plane === selectedPlane;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n            onClick: () => setSelectedPlane(plane),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pi-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: plane\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `status ${(pos === null || pos === void 0 ? void 0 : pos.status) === \"SAFE\" ? \"safe\" : \"spoofed\"}`,\n                children: (pos === null || pos === void 0 ? void 0 : pos.status) || \"UNK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pi-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Speed: \", info.speed || \"--\", \" km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"ETA: \", info.eta || \"--\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dest-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.0001\",\n                placeholder: \"Lat\",\n                value: ((_inputs$plane = inputs[plane]) === null || _inputs$plane === void 0 ? void 0 : _inputs$plane.lat) || \"\",\n                onChange: e => handleInputChange(plane, \"lat\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.0001\",\n                placeholder: \"Lon\",\n                value: ((_inputs$plane2 = inputs[plane]) === null || _inputs$plane2 === void 0 ? void 0 : _inputs$plane2.lon) || \"\",\n                onChange: e => handleInputChange(plane, \"lon\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"spoof-button\",\n                onClick: () => handleCheck(plane),\n                children: \"Spoof\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, plane, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card controls-card\",\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Control Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          id: \"startSimButton\",\n          children: \"Manual Spoofing Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// Zoom control small component\n_s(Sidebar, \"y88sAu/TO9eENcClZmyxJnz9qPA=\");\n_c = Sidebar;\nfunction ZoomControls() {\n  _s2();\n  const map = useMap();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"80px\",\n      right: \"20px\",\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => map.zoomIn(),\n      style: {\n        display: \"block\",\n        marginBottom: \"5px\"\n      },\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => map.zoomOut(),\n      children: \"\\uFF0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s2(ZoomControls, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n_c2 = ZoomControls;\nfunction App() {\n  _s3();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [simulationStarted, setSimulationStarted] = useState(false);\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const [spoofedPaths, setSpoofedPaths] = useState({});\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\n\n  // refs to manage intervals & latest state inside interval callbacks\n  const intervalsRef = useRef({}); // { planeId: intervalId, ... }\n  const planesRef = useRef({});\n  const spoofedRef = useRef({});\n  useEffect(() => {\n    planesRef.current = planes;\n  }, [planes]);\n  useEffect(() => {\n    spoofedRef.current = spoofedPaths;\n  }, [spoofedPaths]);\n\n  // Helper to clear per-plane interval\n  const clearPlaneInterval = plane => {\n    const id = intervalsRef.current[plane];\n    if (id) {\n      clearInterval(id);\n      delete intervalsRef.current[plane];\n    }\n  };\n\n  // Create and start an interval for a single plane\n  const startIntervalForPlane = plane => {\n    // don't start if already running\n    if (intervalsRef.current[plane]) return;\n    const traj = trajectories[plane];\n    if (!traj || traj.length === 0) return;\n\n    // if currently spoofed, do not start\n    if (spoofedRef.current[plane] || planesRef.current[plane] && planesRef.current[plane].status === \"SPOOFED\") {\n      return;\n    }\n    let index = 0;\n    intervalsRef.current[plane] = setInterval(() => {\n      // If at any time this plane becomes spoofed, stop interval\n      if (spoofedRef.current[plane] || planesRef.current[plane] && planesRef.current[plane].status === \"SPOOFED\") {\n        clearPlaneInterval(plane);\n        return;\n      }\n\n      // If trajectory finished, clear interval\n      if (index >= traj.length) {\n        clearPlaneInterval(plane);\n        return;\n      }\n      const prevPos = index > 0 ? traj[index - 1] : traj[0];\n      const currPos = traj[index];\n      const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\n      const speed = (dist * 3.6).toFixed(1);\n      const eta = Math.max(0, traj.length - index) + \"s\";\n\n      // update speed/eta\n      setSpeedETA(old => ({\n        ...old,\n        [plane]: {\n          speed,\n          eta\n        }\n      }));\n\n      // update plane position (functional set to avoid stale state)\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          lat: currPos.lat,\n          lon: currPos.lon,\n          status: currPos.status || \"SAFE\"\n        }\n      }));\n      index++;\n    }, 1000);\n  };\n\n  // Start simulation: fetch trajectories then start intervals per plane\n  const startSimulation = async () => {\n    try {\n      const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\n      const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n      const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          csv_files: csvFiles,\n          signature\n        })\n      });\n      if (!res.ok) throw new Error(\"backend error\");\n      const data = await res.json();\n\n      // clear old intervals if any\n      Object.keys(intervalsRef.current).forEach(p => clearPlaneInterval(p));\n      const trajs = {};\n      const startPositions = {};\n      Object.keys(data).forEach(plane => {\n        var _interpolated$, _interpolated$2, _interpolated$3;\n        const allPoints = data[plane].trajectory || [];\n        const interpolated = interpolatePath(allPoints, 60);\n        trajs[plane] = interpolated;\n        startPositions[plane] = {\n          lat: ((_interpolated$ = interpolated[0]) === null || _interpolated$ === void 0 ? void 0 : _interpolated$.lat) || 0,\n          lon: ((_interpolated$2 = interpolated[0]) === null || _interpolated$2 === void 0 ? void 0 : _interpolated$2.lon) || 0,\n          status: ((_interpolated$3 = interpolated[0]) === null || _interpolated$3 === void 0 ? void 0 : _interpolated$3.status) || \"SAFE\"\n        };\n      });\n      setTrajectories(trajs);\n      setPlanes(startPositions);\n      setSimulationStarted(true);\n\n      // small delay to ensure state refs sync, then start intervals\n      setTimeout(() => {\n        Object.keys(trajs).forEach(p => startIntervalForPlane(p));\n      }, 50);\n    } catch (err) {\n      console.error(\"startSimulation error:\", err);\n      alert(\"Failed to load trajectories from backend. Check console.\");\n    }\n  };\n\n  // If trajectories change after simulation has started, start intervals (but avoid restarting ones already running)\n  useEffect(() => {\n    if (!simulationStarted) return;\n    Object.keys(trajectories).forEach(plane => {\n      // only start if not spoofed & not already running\n      if (!intervalsRef.current[plane] && !spoofedRef.current[plane]) {\n        startIntervalForPlane(plane);\n      }\n    });\n    return () => {\n      // leave intervals running; cleanup handled on unmount below\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trajectories, simulationStarted]);\n\n  // Clear all intervals on unmount\n  useEffect(() => {\n    return () => {\n      Object.keys(intervalsRef.current).forEach(p => clearPlaneInterval(p));\n    };\n  }, []);\n\n  // Drag spoof detection: append multiple spoof points and stop plane interval\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const lastCorrect = planes[plane] || {\n      lat: pos.lat,\n      lon: pos.lng\n    };\n\n    // append the dragged point to the spoofed path (allow multiple drags)\n    setSpoofedPaths(prev => {\n      const existing = prev[plane] || [[lastCorrect.lat, lastCorrect.lon]];\n      return {\n        ...prev,\n        [plane]: [...existing, [pos.lat, pos.lng]]\n      };\n    });\n\n    // mark plane as SPOOFED and stop its interval immediately\n    setPlanes(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        lat: pos.lat,\n        lon: pos.lng,\n        status: \"SPOOFED\"\n      }\n    }));\n    clearPlaneInterval(plane);\n\n    // short alert + sound\n    alert(`${plane} has gone off trajectory! Spoof attack detected.`);\n    try {\n      audioRef.current.play();\n    } catch (e) {/* ignore autoplay errors */}\n  };\n\n  // Destination check: if too far, mark SPOOFED and clear interval\n  const checkDestination = (plane, lat, lon) => {\n    if (!trajectories[plane]) return alert(\"No trajectory data for \" + plane);\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\n\n    // update plane pos\n    setPlanes(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        lat,\n        lon\n      }\n    }));\n    if (d > 50000) {\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          status: \"SPOOFED\"\n        }\n      }));\n      setSpoofedPaths(prev => ({\n        ...prev,\n        [plane]: prev[plane] ? [...prev[plane], [lat, lon]] : [[trajectories[plane][trajectories[plane].length - 2].lat, trajectories[plane][trajectories[plane].length - 2].lon], [lat, lon]]\n      }));\n      clearPlaneInterval(plane);\n      alert(`${plane} reported wrong destination! Marked as SPOOFED.`);\n      try {\n        audioRef.current.play();\n      } catch (e) {}\n    } else {\n      alert(`${plane} destination verified as correct.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-grid\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane,\n      checkDestination: checkDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-card card\",\n        children: [!simulationStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-button\",\n            onClick: startSimulation,\n            children: \"Start Simulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: indiaCenter,\n          zoom: 5,\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ZoomControls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n            position: \"topright\",\n            children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n              checked: true,\n              name: \"OpenStreetMap\",\n              children: /*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n              name: \"ESRI 3D Terrain (imagery + hillshade)\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n                  attribution: \"Tiles \\xA9 Esri\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: \"https://server.arcgisonline.com/ArcGIS/rest/services/Elevation/World_Hillshade/MapServer/tile/{z}/{y}/{x}\",\n                  attribution: \"Hillshade \\xA9 Esri\",\n                  opacity: 0.45\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n              name: \"Carto Dark\",\n              children: /*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n                attribution: \"\\xA9 OpenStreetMap contributors \\xA9 CARTO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), Object.keys(planes).map(plane => {\n            const pos = planes[plane];\n            if (!pos) return null;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: (trajectories[plane] || []).map(p => [p.lat, p.lon]),\n                pathOptions: {\n                  color: \"green\",\n                  dashArray: \"6,8\",\n                  weight: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), spoofedPaths[plane] && spoofedPaths[plane].length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                  positions: spoofedPaths[plane],\n                  pathOptions: {\n                    color: \"rgba(255,0,0,0.9)\",\n                    dashArray: \"6,8\",\n                    weight: 3\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n                  positions: spoofedPaths[plane],\n                  pathOptions: {\n                    color: \"rgba(255,0,0,0.18)\",\n                    dashArray: \"6,8\",\n                    weight: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Marker, {\n                position: [pos.lat, pos.lon],\n                icon: planeIcon,\n                draggable: true,\n                eventHandlers: {\n                  dragend: e => handleDragEnd(plane, e)\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  direction: \"top\",\n                  offset: [0, -20],\n                  permanent: true,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: pos.status === \"SAFE\" ? \"#6ee7b7\" : \"#ff7b7b\",\n                      fontWeight: \"bold\"\n                    },\n                    children: [plane, \": \", pos.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), pos.status === \"SPOOFED\" && /*#__PURE__*/_jsxDEV(Marker, {\n                position: [pos.lat + 0.05, pos.lon],\n                icon: alertIcon,\n                interactive: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 48\n              }, this)]\n            }, plane, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"right-col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Helpers ---\n_s3(App, \"rD2Klu0QU1yjjKMXTthwEHEHgx0=\");\n_c3 = App;\nfunction interpolatePath(points, steps) {\n  if (!points || points.length < 2) return points || [];\n  const interpolated = [];\n  for (let i = 0; i < steps; i++) {\n    const t = i / (steps - 1);\n    const seg = t * (points.length - 1);\n    const idx = Math.floor(seg);\n    const frac = seg - idx;\n    if (idx >= points.length - 1) interpolated.push(points[points.length - 1]);else {\n      const p1 = points[idx],\n        p2 = points[idx + 1];\n      interpolated.push({\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\n        status: \"SAFE\"\n      });\n    }\n  }\n  return interpolated;\n}\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"ZoomControls\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","useMap","L","jsxDEV","_jsxDEV","Fragment","_Fragment","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","process","env","PUBLIC_URL","iconSize","iconAnchor","alertIcon","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","checkDestination","_s","inputs","setInputs","handleInputChange","plane","field","value","prev","handleCheck","lat","lon","parseFloat","alert","className","style","width","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","map","_inputs$plane","_inputs$plane2","pos","info","isSelected","onClick","status","speed","eta","type","step","placeholder","onChange","e","target","marginTop","id","_c","ZoomControls","_s2","position","top","right","zIndex","zoomIn","display","marginBottom","zoomOut","_c2","App","_s3","setPlanes","trajectories","setTrajectories","simulationStarted","setSimulationStarted","setSpeedETA","spoofedPaths","setSpoofedPaths","audioRef","Audio","intervalsRef","planesRef","spoofedRef","current","clearPlaneInterval","clearInterval","startIntervalForPlane","traj","index","setInterval","prevPos","currPos","dist","latLng","distanceTo","toFixed","Math","max","old","startSimulation","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","ok","Error","data","json","forEach","p","trajs","startPositions","_interpolated$","_interpolated$2","_interpolated$3","allPoints","trajectory","interpolated","interpolatePath","setTimeout","err","console","error","handleDragEnd","getLatLng","lastCorrect","lng","existing","play","originalDest","d","center","zoom","height","checked","name","url","attribution","opacity","positions","pathOptions","color","dashArray","weight","icon","draggable","eventHandlers","dragend","direction","offset","permanent","fontWeight","interactive","_c3","points","steps","i","t","seg","idx","floor","frac","push","p1","p2","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/USER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl, useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\";\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 16]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12]\r\n});\r\n\r\n// Simple left sidebar (keeps previous behavior)\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane, checkDestination }) {\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleInputChange = (plane, field, value) => {\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [plane]: {\r\n        ...prev[plane],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (plane) => {\r\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\r\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\r\n    } else {\r\n      alert(\"Enter lat and lon for destination check\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-left\" style={{ width: 280 }}>\r\n      <div className=\"brand\">\r\n        <img src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\" />\r\n        <h2>GeoShield</h2>\r\n      </div>\r\n\r\n      <div className=\"card planes-card\">\r\n        <h4>✈ Active Planes</h4>\r\n        <div className=\"planes-list\">\r\n          {Object.keys(planes).length === 0 && <div className=\"empty\">No planes. Start simulation.</div>}\r\n          {Object.keys(planes).map(plane => {\r\n            const pos = planes[plane];\r\n            const info = speedETA[plane] || {};\r\n            const isSelected = plane === selectedPlane;\r\n            return (\r\n              <div key={plane} className={`plane-item ${isSelected ? \"selected\" : \"\"}`} onClick={() => setSelectedPlane(plane)}>\r\n                <div className=\"pi-top\">\r\n                  <div><strong>{plane}</strong></div>\r\n                  <div className={`status ${pos?.status === \"SAFE\" ? \"safe\" : \"spoofed\"}`}>{pos?.status || \"UNK\"}</div>\r\n                </div>\r\n                <div className=\"pi-bottom\">\r\n                  <div>Speed: {info.speed || \"--\"} km/h</div>\r\n                  <div>ETA: {info.eta || \"--\"}</div>\r\n                </div>\r\n\r\n                <div className=\"dest-check\">\r\n                  <input type=\"number\" step=\"0.0001\" placeholder=\"Lat\" value={inputs[plane]?.lat || \"\"} onChange={(e) => handleInputChange(plane, \"lat\", e.target.value)} />\r\n                  <input type=\"number\" step=\"0.0001\" placeholder=\"Lon\" value={inputs[plane]?.lon || \"\"} onChange={(e) => handleInputChange(plane, \"lon\", e.target.value)} />\r\n                  <button className=\"spoof-button\" onClick={() => handleCheck(plane)}>Spoof</button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card controls-card\" style={{ marginTop: 12 }}>\r\n        <h4>Control Options</h4>\r\n        <div className=\"controls-row\">\r\n          <button className=\"control-btn\" id=\"startSimButton\">Manual Spoofing Test</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Zoom control small component\r\nfunction ZoomControls() {\r\n  const map = useMap();\r\n  return (\r\n    <div style={{ position: \"absolute\", top: \"80px\", right: \"20px\", zIndex: 1000 }}>\r\n      <button onClick={() => map.zoomIn()} style={{ display: \"block\", marginBottom: \"5px\" }}>＋</button>\r\n      <button onClick={() => map.zoomOut()}>－</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [simulationStarted, setSimulationStarted] = useState(false);\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const [spoofedPaths, setSpoofedPaths] = useState({});\r\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\r\n\r\n  // refs to manage intervals & latest state inside interval callbacks\r\n  const intervalsRef = useRef({});         // { planeId: intervalId, ... }\r\n  const planesRef = useRef({});\r\n  const spoofedRef = useRef({});\r\n  useEffect(() => { planesRef.current = planes; }, [planes]);\r\n  useEffect(() => { spoofedRef.current = spoofedPaths; }, [spoofedPaths]);\r\n\r\n  // Helper to clear per-plane interval\r\n  const clearPlaneInterval = (plane) => {\r\n    const id = intervalsRef.current[plane];\r\n    if (id) {\r\n      clearInterval(id);\r\n      delete intervalsRef.current[plane];\r\n    }\r\n  };\r\n\r\n  // Create and start an interval for a single plane\r\n  const startIntervalForPlane = (plane) => {\r\n    // don't start if already running\r\n    if (intervalsRef.current[plane]) return;\r\n    const traj = trajectories[plane];\r\n    if (!traj || traj.length === 0) return;\r\n\r\n    // if currently spoofed, do not start\r\n    if (spoofedRef.current[plane] || (planesRef.current[plane] && planesRef.current[plane].status === \"SPOOFED\")) {\r\n      return;\r\n    }\r\n\r\n    let index = 0;\r\n    intervalsRef.current[plane] = setInterval(() => {\r\n      // If at any time this plane becomes spoofed, stop interval\r\n      if (spoofedRef.current[plane] || (planesRef.current[plane] && planesRef.current[plane].status === \"SPOOFED\")) {\r\n        clearPlaneInterval(plane);\r\n        return;\r\n      }\r\n\r\n      // If trajectory finished, clear interval\r\n      if (index >= traj.length) {\r\n        clearPlaneInterval(plane);\r\n        return;\r\n      }\r\n\r\n      const prevPos = index > 0 ? traj[index - 1] : traj[0];\r\n      const currPos = traj[index];\r\n\r\n      const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\r\n      const speed = (dist * 3.6).toFixed(1);\r\n      const eta = Math.max(0, traj.length - index) + \"s\";\r\n\r\n      // update speed/eta\r\n      setSpeedETA(old => ({ ...old, [plane]: { speed, eta } }));\r\n\r\n      // update plane position (functional set to avoid stale state)\r\n      setPlanes(prev => ({\r\n        ...prev,\r\n        [plane]: {\r\n          ...prev[plane],\r\n          lat: currPos.lat,\r\n          lon: currPos.lon,\r\n          status: currPos.status || \"SAFE\"\r\n        }\r\n      }));\r\n\r\n      index++;\r\n    }, 1000);\r\n  };\r\n\r\n  // Start simulation: fetch trajectories then start intervals per plane\r\n  const startSimulation = async () => {\r\n    try {\r\n      const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\r\n      const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n      const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ csv_files: csvFiles, signature })\r\n      });\r\n      if (!res.ok) throw new Error(\"backend error\");\r\n      const data = await res.json();\r\n\r\n      // clear old intervals if any\r\n      Object.keys(intervalsRef.current).forEach(p => clearPlaneInterval(p));\r\n\r\n      const trajs = {};\r\n      const startPositions = {};\r\n      Object.keys(data).forEach(plane => {\r\n        const allPoints = data[plane].trajectory || [];\r\n        const interpolated = interpolatePath(allPoints, 60);\r\n        trajs[plane] = interpolated;\r\n        startPositions[plane] = {\r\n          lat: interpolated[0]?.lat || 0,\r\n          lon: interpolated[0]?.lon || 0,\r\n          status: interpolated[0]?.status || \"SAFE\"\r\n        };\r\n      });\r\n\r\n      setTrajectories(trajs);\r\n      setPlanes(startPositions);\r\n      setSimulationStarted(true);\r\n\r\n      // small delay to ensure state refs sync, then start intervals\r\n      setTimeout(() => {\r\n        Object.keys(trajs).forEach(p => startIntervalForPlane(p));\r\n      }, 50);\r\n\r\n    } catch (err) {\r\n      console.error(\"startSimulation error:\", err);\r\n      alert(\"Failed to load trajectories from backend. Check console.\");\r\n    }\r\n  };\r\n\r\n  // If trajectories change after simulation has started, start intervals (but avoid restarting ones already running)\r\n  useEffect(() => {\r\n    if (!simulationStarted) return;\r\n    Object.keys(trajectories).forEach(plane => {\r\n      // only start if not spoofed & not already running\r\n      if (!intervalsRef.current[plane] && !spoofedRef.current[plane]) {\r\n        startIntervalForPlane(plane);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      // leave intervals running; cleanup handled on unmount below\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [trajectories, simulationStarted]);\r\n\r\n  // Clear all intervals on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.keys(intervalsRef.current).forEach(p => clearPlaneInterval(p));\r\n    };\r\n  }, []);\r\n\r\n  // Drag spoof detection: append multiple spoof points and stop plane interval\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const lastCorrect = planes[plane] || { lat: pos.lat, lon: pos.lng };\r\n\r\n    // append the dragged point to the spoofed path (allow multiple drags)\r\n    setSpoofedPaths(prev => {\r\n      const existing = prev[plane] || [[lastCorrect.lat, lastCorrect.lon]];\r\n      return { ...prev, [plane]: [...existing, [pos.lat, pos.lng]] };\r\n    });\r\n\r\n    // mark plane as SPOOFED and stop its interval immediately\r\n    setPlanes(prev => ({ ...prev, [plane]: { ...prev[plane], lat: pos.lat, lon: pos.lng, status: \"SPOOFED\" } }));\r\n    clearPlaneInterval(plane);\r\n\r\n    // short alert + sound\r\n    alert(`${plane} has gone off trajectory! Spoof attack detected.`);\r\n    try { audioRef.current.play(); } catch (e) { /* ignore autoplay errors */ }\r\n  };\r\n\r\n  // Destination check: if too far, mark SPOOFED and clear interval\r\n  const checkDestination = (plane, lat, lon) => {\r\n    if (!trajectories[plane]) return alert(\"No trajectory data for \" + plane);\r\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\r\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\r\n\r\n    // update plane pos\r\n    setPlanes(prev => ({ ...prev, [plane]: { ...prev[plane], lat, lon } }));\r\n\r\n    if (d > 50000) {\r\n      setPlanes(prev => ({ ...prev, [plane]: { ...prev[plane], status: \"SPOOFED\" } }));\r\n      setSpoofedPaths(prev => ({\r\n        ...prev,\r\n        [plane]: prev[plane] ? [...prev[plane], [lat, lon]] : [[trajectories[plane][trajectories[plane].length - 2].lat, trajectories[plane][trajectories[plane].length - 2].lon], [lat, lon]]\r\n      }));\r\n      clearPlaneInterval(plane);\r\n      alert(`${plane} reported wrong destination! Marked as SPOOFED.`);\r\n      try { audioRef.current.play(); } catch (e) {}\r\n    } else {\r\n      alert(`${plane} destination verified as correct.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-grid\">\r\n      <Sidebar\r\n        planes={planes}\r\n        speedETA={speedETA}\r\n        selectedPlane={selectedPlane}\r\n        setSelectedPlane={setSelectedPlane}\r\n        checkDestination={checkDestination}\r\n      />\r\n\r\n      <main className=\"main-area\">\r\n        <div className=\"map-card card\">\r\n          {!simulationStarted && (\r\n            <div className=\"start-overlay\">\r\n              <button className=\"start-button\" onClick={startSimulation}>Start Simulation</button>\r\n            </div>\r\n          )}\r\n\r\n          <MapContainer center={indiaCenter} zoom={5} style={{ height: \"100%\", width: \"100%\" }}>\r\n            <ZoomControls />\r\n            <LayersControl position=\"topright\">\r\n              <BaseLayer checked name=\"OpenStreetMap\">\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n              </BaseLayer>\r\n\r\n              {/* ESRI World Imagery + Hillshade overlay for a pseudo-3D terrain look (free) */}\r\n              <BaseLayer name=\"ESRI 3D Terrain (imagery + hillshade)\">\r\n                <>\r\n                  <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" attribution=\"Tiles © Esri\" />\r\n                  <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/Elevation/World_Hillshade/MapServer/tile/{z}/{y}/{x}\" attribution=\"Hillshade © Esri\" opacity={0.45} />\r\n                </>\r\n              </BaseLayer>\r\n\r\n              <BaseLayer name=\"Carto Dark\">\r\n                <TileLayer url=\"https://basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\" attribution=\"© OpenStreetMap contributors © CARTO\" />\r\n              </BaseLayer>\r\n            </LayersControl>\r\n\r\n            {Object.keys(planes).map(plane => {\r\n              const pos = planes[plane];\r\n              if (!pos) return null;\r\n\r\n              return (\r\n                <React.Fragment key={plane}>\r\n                  {/* Original planned path (green dotted) */}\r\n                  <Polyline positions={(trajectories[plane] || []).map(p => [p.lat, p.lon])} pathOptions={{ color: \"green\", dashArray: \"6,8\", weight: 3 }} />\r\n\r\n                  {/* Spoofed path (red dotted glow) */}\r\n                  {spoofedPaths[plane] && spoofedPaths[plane].length > 0 && (\r\n                    <>\r\n                      {/* narrow solid red line */}\r\n                      <Polyline positions={spoofedPaths[plane]} pathOptions={{ color: \"rgba(255,0,0,0.9)\", dashArray: \"6,8\", weight: 3 }} />\r\n                      {/* wider translucent to create a glow */}\r\n                      <Polyline positions={spoofedPaths[plane]} pathOptions={{ color: \"rgba(255,0,0,0.18)\", dashArray: \"6,8\", weight: 10 }} />\r\n                    </>\r\n                  )}\r\n\r\n                  <Marker position={[pos.lat, pos.lon]} icon={planeIcon} draggable={true} eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}>\r\n                    <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                      <div style={{ color: pos.status === \"SAFE\" ? \"#6ee7b7\" : \"#ff7b7b\", fontWeight: \"bold\" }}>\r\n                        {plane}: {pos.status}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Marker>\r\n\r\n                  {pos.status === \"SPOOFED\" && <Marker position={[pos.lat + 0.05, pos.lon]} icon={alertIcon} interactive={false} />}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </MapContainer>\r\n        </div>\r\n\r\n        <div className=\"bottom-row\">\r\n          {/* kept empty or you can render logs */}\r\n        </div>\r\n      </main>\r\n\r\n      <aside className=\"right-col\">\r\n        {/* Right column (alerts / health) omitted for brevity if not needed here */}\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\n// --- Helpers ---\r\nfunction interpolatePath(points, steps) {\r\n  if (!points || points.length < 2) return points || [];\r\n  const interpolated = [];\r\n  for (let i = 0; i < steps; i++) {\r\n    const t = i / (steps - 1);\r\n    const seg = t * (points.length - 1);\r\n    const idx = Math.floor(seg);\r\n    const frac = seg - idx;\r\n    if (idx >= points.length - 1) interpolated.push(points[points.length - 1]);\r\n    else {\r\n      const p1 = points[idx], p2 = points[idx + 1];\r\n      interpolated.push({ lat: p1.lat + (p2.lat - p1.lat) * frac, lon: p1.lon + (p2.lon - p1.lon) * frac, status: \"SAFE\" });\r\n    }\r\n  }\r\n  return interpolated;\r\n}\r\n\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, { name: \"HMAC\", hash: \"SHA-256\" }, false, [\"sign\"]);\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}