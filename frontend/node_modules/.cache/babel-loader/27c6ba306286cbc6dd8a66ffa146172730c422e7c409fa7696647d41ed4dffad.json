{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\nconst planeIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\n  iconSize: [24, 24],\n  iconAnchor: [12, 12]\n});\n\n// Sidebar with status icons\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2708 Active Planes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), Object.keys(planes).map(plane => {\n      const info = speedETA[plane] || {};\n      const isSelected = plane === selectedPlane;\n      const status = planes[plane].status;\n      const statusIcon = status === \"SAFE\" ? \"ðŸŸ¢\" : \"ðŸ”´\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedPlane(plane),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [statusIcon, \" \", plane]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 53\n        }, this), info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Speed: \", info.speed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ETA: \", info.eta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this)]\n      }, plane, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\nfunction App() {\n  _s();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [simulationStarted, setSimulationStarted] = useState(false);\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\n\n  // Fetch trajectories once at start\n  const startSimulation = async () => {\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        csv_files: csvFiles,\n        signature\n      })\n    });\n    const data = await res.json();\n    const trajs = {};\n    const startPositions = {};\n    Object.keys(data).forEach(plane => {\n      const allPoints = data[plane].trajectory;\n\n      // Interpolate into ~60 steps\n      const interpolated = interpolatePath(allPoints, 60);\n      trajs[plane] = interpolated;\n      startPositions[plane] = {\n        lat: interpolated[0].lat,\n        lon: interpolated[0].lon,\n        status: interpolated[0].status\n      };\n    });\n    setPlanes(startPositions);\n    setTrajectories(trajs);\n    setSimulationStarted(true);\n  };\n\n  // Step along trajectory (1 point per second)\n  useEffect(() => {\n    if (!simulationStarted) return;\n    const intervals = {};\n    Object.keys(trajectories).forEach(plane => {\n      let index = 0;\n      intervals[plane] = setInterval(() => {\n        setPlanes(prev => {\n          if (index < trajectories[plane].length) {\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\n            const currPos = trajectories[plane][index];\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\n            const speed = (dist * 3.6).toFixed(1); // km/h approx\n            const eta = trajectories[plane].length - index + \"s\";\n            setSpeedETA(old => ({\n              ...old,\n              [plane]: {\n                speed,\n                eta\n              }\n            }));\n            return {\n              ...prev,\n              [plane]: {\n                ...prev[plane],\n                lat: currPos.lat,\n                lon: currPos.lon,\n                status: currPos.status\n              }\n            };\n          }\n          return prev;\n        });\n        index++;\n      }, 1000); // update every second\n    });\n    return () => {\n      Object.values(intervals).forEach(clearInterval);\n    };\n  }, [simulationStarted, trajectories]);\n\n  // Drag spoof detection\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const nearest = trajectories[plane] || [];\n    let minDist = Infinity;\n    nearest.forEach(p => {\n      const d = L.latLng(pos).distanceTo(L.latLng([p.lat, p.lon]));\n      if (d < minDist) minDist = d;\n    });\n    if (minDist > 50000) {\n      // 50 km off trajectory\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          lat: pos.lat,\n          lon: pos.lng,\n          status: \"SPOOFED\"\n        }\n      }));\n      alert(`${plane} has gone off trajectory! Spoof attack detected.`);\n      audioRef.current.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"88%\",\n        position: \"relative\"\n      },\n      children: [!simulationStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        },\n        children: \"Start Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: indiaCenter,\n        zoom: 5,\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"ESRI Satellite\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), Object.keys(planes).map(plane => {\n          const pos = planes[plane];\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Polyline, {\n              positions: (trajectories[plane] || []).map(p => [p.lat, p.lon]),\n              color: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat, pos.lon],\n              icon: planeIcon,\n              draggable: true,\n              eventHandlers: {\n                dragend: e => handleDragEnd(plane, e)\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                direction: \"top\",\n                offset: [0, -20],\n                permanent: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: pos.status === \"SAFE\" ? \"green\" : \"red\",\n                    fontWeight: \"bold\"\n                  },\n                  children: [plane, \": \", pos.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), pos.status === \"SPOOFED\" && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat + 0.05, pos.lon],\n              icon: alertIcon,\n              interactive: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, plane, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Helpers ---\n\n// Interpolate a path into N steps (for smooth 1-min flight)\n_s(App, \"6M0S2rybxgDnZFMhaweB9zQpCJU=\");\n_c2 = App;\nfunction interpolatePath(points, steps) {\n  if (points.length < 2) return points;\n  const interpolated = [];\n  const totalSteps = steps;\n  for (let i = 0; i < totalSteps; i++) {\n    const t = i / (totalSteps - 1);\n    const seg = t * (points.length - 1);\n    const idx = Math.floor(seg);\n    const frac = seg - idx;\n    if (idx >= points.length - 1) {\n      interpolated.push(points[points.length - 1]);\n    } else {\n      const p1 = points[idx];\n      const p2 = points[idx + 1];\n      interpolated.push({\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\n        status: \"SAFE\"\n      });\n    }\n  }\n  return interpolated;\n}\n\n// HMAC helper\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","L","jsxDEV","_jsxDEV","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","process","env","PUBLIC_URL","iconSize","iconAnchor","alertIcon","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","plane","info","isSelected","status","statusIcon","onClick","speed","eta","_c","App","_s","setPlanes","trajectories","setTrajectories","simulationStarted","setSimulationStarted","setSpeedETA","audioRef","Audio","startSimulation","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","data","json","trajs","startPositions","forEach","allPoints","trajectory","interpolated","interpolatePath","lat","lon","intervals","index","setInterval","prev","length","prevPos","currPos","dist","latLng","distanceTo","toFixed","old","values","clearInterval","handleDragEnd","e","pos","target","getLatLng","nearest","minDist","Infinity","p","d","lng","alert","current","play","style","display","width","position","top","left","transform","zIndex","padding","fontSize","cursor","center","zoom","height","checked","name","url","Fragment","positions","color","icon","draggable","eventHandlers","dragend","direction","offset","permanent","fontWeight","interactive","_c2","points","steps","totalSteps","i","t","seg","idx","Math","floor","frac","push","p1","p2","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/ACER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\";\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 16]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12]\r\n});\r\n\r\n// Sidebar with status icons\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>âœˆ Active Planes</h3>\r\n      {Object.keys(planes).map(plane => {\r\n        const info = speedETA[plane] || {};\r\n        const isSelected = plane === selectedPlane;\r\n        const status = planes[plane].status;\r\n        const statusIcon = status === \"SAFE\" ? \"ðŸŸ¢\" : \"ðŸ”´\";\r\n\r\n        return (\r\n          <div\r\n            key={plane}\r\n            className={`plane-item ${isSelected ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelectedPlane(plane)}\r\n          >\r\n            <strong>{statusIcon} {plane}</strong> â€” <span>{status}</span>\r\n            {info.speed && <div>Speed: {info.speed} km/h</div>}\r\n            {info.eta && <div>ETA: {info.eta}</div>}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [simulationStarted, setSimulationStarted] = useState(false);\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\r\n\r\n  // Fetch trajectories once at start\r\n  const startSimulation = async () => {\r\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\r\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ csv_files: csvFiles, signature })\r\n    });\r\n    const data = await res.json();\r\n\r\n    const trajs = {};\r\n    const startPositions = {};\r\n    Object.keys(data).forEach(plane => {\r\n      const allPoints = data[plane].trajectory;\r\n\r\n      // Interpolate into ~60 steps\r\n      const interpolated = interpolatePath(allPoints, 60);\r\n      trajs[plane] = interpolated;\r\n\r\n      startPositions[plane] = {\r\n        lat: interpolated[0].lat,\r\n        lon: interpolated[0].lon,\r\n        status: interpolated[0].status\r\n      };\r\n    });\r\n\r\n    setPlanes(startPositions);\r\n    setTrajectories(trajs);\r\n    setSimulationStarted(true);\r\n  };\r\n\r\n  // Step along trajectory (1 point per second)\r\n  useEffect(() => {\r\n    if (!simulationStarted) return;\r\n    const intervals = {};\r\n\r\n    Object.keys(trajectories).forEach(plane => {\r\n      let index = 0;\r\n      intervals[plane] = setInterval(() => {\r\n        setPlanes(prev => {\r\n          if (index < trajectories[plane].length) {\r\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\r\n            const currPos = trajectories[plane][index];\r\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\r\n            const speed = (dist * 3.6).toFixed(1); // km/h approx\r\n            const eta = (trajectories[plane].length - index) + \"s\";\r\n\r\n            setSpeedETA(old => ({ ...old, [plane]: { speed, eta } }));\r\n\r\n            return {\r\n              ...prev,\r\n              [plane]: {\r\n                ...prev[plane],\r\n                lat: currPos.lat,\r\n                lon: currPos.lon,\r\n                status: currPos.status\r\n              }\r\n            };\r\n          }\r\n          return prev;\r\n        });\r\n        index++;\r\n      }, 1000); // update every second\r\n    });\r\n\r\n    return () => {\r\n      Object.values(intervals).forEach(clearInterval);\r\n    };\r\n  }, [simulationStarted, trajectories]);\r\n\r\n  // Drag spoof detection\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const nearest = trajectories[plane] || [];\r\n    let minDist = Infinity;\r\n    nearest.forEach(p => {\r\n      const d = L.latLng(pos).distanceTo(L.latLng([p.lat, p.lon]));\r\n      if (d < minDist) minDist = d;\r\n    });\r\n\r\n    if (minDist > 50000) { // 50 km off trajectory\r\n      setPlanes(prev => ({\r\n        ...prev,\r\n        [plane]: { ...prev[plane], lat: pos.lat, lon: pos.lng, status: \"SPOOFED\" }\r\n      }));\r\n      alert(`${plane} has gone off trajectory! Spoof attack detected.`);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar\r\n        planes={planes}\r\n        speedETA={speedETA}\r\n        selectedPlane={selectedPlane}\r\n        setSelectedPlane={setSelectedPlane}\r\n      />\r\n      <div style={{ width: \"88%\", position: \"relative\" }}>\r\n        {!simulationStarted && (\r\n          <button\r\n            onClick={startSimulation}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"20px\",\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              zIndex: 1000,\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            Start Simulation\r\n          </button>\r\n        )}\r\n\r\n        <MapContainer center={indiaCenter} zoom={5} style={{ height: \"100vh\", width: \"100%\" }}>\r\n          <LayersControl position=\"topright\">\r\n            <BaseLayer checked name=\"OpenStreetMap\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            </BaseLayer>\r\n            <BaseLayer name=\"ESRI Satellite\">\r\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\r\n            </BaseLayer>\r\n          </LayersControl>\r\n\r\n          {Object.keys(planes).map(plane => {\r\n            const pos = planes[plane];\r\n            return (\r\n              <React.Fragment key={plane}>\r\n                <Polyline positions={(trajectories[plane] || []).map(p => [p.lat, p.lon])} color=\"blue\" />\r\n                <Marker\r\n                  position={[pos.lat, pos.lon]}\r\n                  icon={planeIcon}\r\n                  draggable={true}\r\n                  eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}\r\n                >\r\n                  <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                    <div style={{ color: pos.status === \"SAFE\" ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                      {plane}: {pos.status}\r\n                    </div>\r\n                  </Tooltip>\r\n                </Marker>\r\n                {pos.status === \"SPOOFED\" && (\r\n                  <Marker position={[pos.lat + 0.05, pos.lon]} icon={alertIcon} interactive={false} />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// --- Helpers ---\r\n\r\n// Interpolate a path into N steps (for smooth 1-min flight)\r\nfunction interpolatePath(points, steps) {\r\n  if (points.length < 2) return points;\r\n\r\n  const interpolated = [];\r\n  const totalSteps = steps;\r\n  for (let i = 0; i < totalSteps; i++) {\r\n    const t = i / (totalSteps - 1);\r\n    const seg = t * (points.length - 1);\r\n    const idx = Math.floor(seg);\r\n    const frac = seg - idx;\r\n\r\n    if (idx >= points.length - 1) {\r\n      interpolated.push(points[points.length - 1]);\r\n    } else {\r\n      const p1 = points[idx];\r\n      const p2 = points[idx + 1];\r\n      interpolated.push({\r\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\r\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\r\n        status: \"SAFE\"\r\n      });\r\n    }\r\n  }\r\n  return interpolated;\r\n}\r\n\r\n// HMAC helper\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    keyData,\r\n    { name: \"HMAC\", hash: \"SHA-256\" },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}