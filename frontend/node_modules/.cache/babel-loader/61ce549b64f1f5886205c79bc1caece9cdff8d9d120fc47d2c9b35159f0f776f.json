{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\"; // Create this for sidebar styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\nconst planeIcon = new L.Icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/744/744465.png\",\n  iconSize: [32, 32]\n});\nconst selectedIcon = new L.Icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/744/744464.png\",\n  iconSize: [36, 36]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/1828/1828843.png\",\n  iconSize: [24, 24]\n});\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"legend\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"green\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u25CF SAFE plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u25CF SPOOFED plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        children: \"\\u2500 Historical trajectory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"\\u2500 Predicted path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0 Alert icon = Off trajectory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Legend;\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Planes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Object.keys(planes).map(plane => {\n      const info = speedETA[plane] || {};\n      const isSelected = plane === selectedPlane;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedPlane(plane),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: plane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" (\", planes[plane].status, \")\", info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Speed: \", info.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ETA: \", info.eta, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this)]\n      }, plane, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Sidebar;\nfunction App() {\n  _s();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [targets, setTargets] = useState({});\n  const [predictions, setPredictions] = useState({});\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const audioRef = useRef(new Audio(\"/beep.mp3\"));\n\n  // Fetch plane data\n  useEffect(() => {\n    const fetchPlanes = async () => {\n      try {\n        const csvFiles = [\"../data/gps_data.csv\", \"../data/sample_real.csv\", \"../data/sample_spoofed.csv\"];\n        const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n        const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            csv_files: csvFiles,\n            signature\n          })\n        });\n        const data = await res.json();\n        setPlanes(prev => {\n          const updated = {\n            ...prev\n          };\n          const newTargets = {};\n          const newPredictions = {};\n          const newSpeedETA = {};\n          Object.keys(data).forEach(plane => {\n            var _prev$plane;\n            const current = data[plane].current;\n            const predicted = data[plane].predicted;\n            if (!prev[plane]) updated[plane] = {\n              lat: current.lat,\n              lon: current.lon,\n              status: current.status\n            };\n            if (current.status === \"SPOOFED\" && ((_prev$plane = prev[plane]) === null || _prev$plane === void 0 ? void 0 : _prev$plane.status) !== \"SPOOFED\") audioRef.current.play();\n            newTargets[plane] = {\n              lat: current.lat,\n              lon: current.lon,\n              status: current.status\n            };\n            newPredictions[plane] = predicted.map(p => [p.lat, p.lon]);\n            if (!trajectories[plane]) trajectories[plane] = [];\n            trajectories[plane].push([current.lat, current.lon]);\n            if (trajectories[plane].length >= 2 && predicted.length > 0) {\n              const prevPos = trajectories[plane][trajectories[plane].length - 2];\n              const currPos = [current.lat, current.lon];\n              const dist = L.latLng(prevPos).distanceTo(L.latLng(currPos));\n              const speed = dist;\n              const etaDist = L.latLng(currPos).distanceTo(L.latLng(predicted[0]));\n              const eta = (speed > 0 ? etaDist / speed : 0).toFixed(1);\n              newSpeedETA[plane] = {\n                speed: speed.toFixed(1),\n                eta: eta\n              };\n            }\n          });\n          setTargets(newTargets);\n          setTrajectories({\n            ...trajectories\n          });\n          setPredictions(newPredictions);\n          setSpeedETA(newSpeedETA);\n          return updated;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchPlanes();\n    const interval = setInterval(fetchPlanes, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Smooth movement\n  useEffect(() => {\n    const animate = () => {\n      setPlanes(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(targets).forEach(plane => {\n          const cur = updated[plane];\n          const tgt = targets[plane];\n          if (!cur || !tgt) return;\n          const step = 0.02;\n          cur.lat += (tgt.lat - cur.lat) * step;\n          cur.lon += (tgt.lon - cur.lon) * step;\n          cur.status = tgt.status;\n        });\n        return updated;\n      });\n      requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n  }, [targets]);\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const planeData = planes[plane];\n    const dist = L.latLng(pos).distanceTo(L.latLng([planeData.lat, planeData.lon]));\n    if (dist > 50000) {\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          status: \"SPOOFED\"\n        }\n      }));\n      alert(`${plane} is off trajectory!`);\n      audioRef.current.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: indiaCenter,\n      zoom: 5,\n      style: {\n        height: \"90vh\",\n        width: \"80%\"\n      },\n      zoomControl: true,\n      children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"topright\",\n        children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n          checked: true,\n          name: \"OpenStreetMap\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n          name: \"ESRI Satellite\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n          name: \"Topographic\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), Object.keys(planes).map(plane => {\n        const pos = planes[plane];\n        const pred = predictions[plane] || [];\n        const info = speedETA[plane] || {};\n        const isSelected = plane === selectedPlane;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Polyline, {\n            positions: trajectories[plane] || [],\n            color: isSelected ? \"purple\" : \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), pred.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: pred,\n            color: \"orange\",\n            dashArray: \"5,10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [pos.lat, pos.lon],\n            icon: isSelected ? selectedIcon : planeIcon,\n            draggable: true,\n            eventHandlers: {\n              dragend: e => handleDragEnd(plane, e)\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              direction: \"top\",\n              offset: [0, -20],\n              permanent: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: pos.status === \"SAFE\" ? \"green\" : \"red\",\n                  fontWeight: \"bold\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [plane, \": \", pos.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Speed: \", info.speed, \" m/s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 36\n                }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"ETA to next: \", info.eta, \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), pos.status === \"SPOOFED\" && /*#__PURE__*/_jsxDEV(Marker, {\n            position: [pos.lat + 0.05, pos.lon],\n            icon: alertIcon,\n            interactive: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)]\n        }, plane, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m3v+LfOHD7atm+b5aG6U123OQY4=\");\n_c3 = App;\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","L","jsxDEV","_jsxDEV","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","iconSize","selectedIcon","alertIcon","Legend","className","children","style","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","Object","keys","map","plane","info","isSelected","onClick","status","speed","eta","_c2","App","_s","setPlanes","trajectories","setTrajectories","targets","setTargets","predictions","setPredictions","setSpeedETA","audioRef","Audio","fetchPlanes","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","data","json","prev","updated","newTargets","newPredictions","newSpeedETA","forEach","_prev$plane","current","predicted","lat","lon","play","p","push","length","prevPos","currPos","dist","latLng","distanceTo","etaDist","toFixed","err","console","error","interval","setInterval","clearInterval","animate","cur","tgt","step","requestAnimationFrame","handleDragEnd","e","pos","target","getLatLng","planeData","alert","display","center","zoom","height","width","zoomControl","position","checked","name","url","pred","Fragment","positions","dashArray","icon","draggable","eventHandlers","dragend","direction","offset","permanent","interactive","_c3","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/ACER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\"; // Create this for sidebar styling\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/744/744465.png\",\r\n  iconSize: [32, 32]\r\n});\r\n\r\nconst selectedIcon = new L.Icon({\r\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/744/744464.png\",\r\n  iconSize: [36, 36]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/1828/1828843.png\",\r\n  iconSize: [24, 24]\r\n});\r\n\r\nfunction Legend() {\r\n  return (\r\n    <div className=\"legend\">\r\n      <div><span style={{color:\"green\", fontWeight:\"bold\"}}>● SAFE plane</span></div>\r\n      <div><span style={{color:\"red\", fontWeight:\"bold\"}}>● SPOOFED plane</span></div>\r\n      <div><span style={{color:\"blue\"}}>─ Historical trajectory</span></div>\r\n      <div><span style={{color:\"orange\"}}>─ Predicted path</span></div>\r\n      <div><span>⚠ Alert icon = Off trajectory</span></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Planes</h3>\r\n      {Object.keys(planes).map(plane => {\r\n        const info = speedETA[plane] || {};\r\n        const isSelected = plane === selectedPlane;\r\n        return (\r\n          <div key={plane} \r\n               className={`plane-item ${isSelected ? \"selected\" : \"\"}`} \r\n               onClick={() => setSelectedPlane(plane)}>\r\n            <strong>{plane}</strong> ({planes[plane].status})\r\n            {info.speed && <div>Speed: {info.speed} m/s</div>}\r\n            {info.eta && <div>ETA: {info.eta}s</div>}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [targets, setTargets] = useState({});\r\n  const [predictions, setPredictions] = useState({});\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const audioRef = useRef(new Audio(\"/beep.mp3\"));\r\n\r\n  // Fetch plane data\r\n  useEffect(() => {\r\n    const fetchPlanes = async () => {\r\n      try {\r\n        const csvFiles = [\"../data/gps_data.csv\", \"../data/sample_real.csv\", \"../data/sample_spoofed.csv\"];\r\n        const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n        const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ csv_files: csvFiles, signature })\r\n        });\r\n        const data = await res.json();\r\n\r\n        setPlanes(prev => {\r\n          const updated = { ...prev };\r\n          const newTargets = {};\r\n          const newPredictions = {};\r\n          const newSpeedETA = {};\r\n\r\n          Object.keys(data).forEach(plane => {\r\n            const current = data[plane].current;\r\n            const predicted = data[plane].predicted;\r\n\r\n            if (!prev[plane]) updated[plane] = { lat: current.lat, lon: current.lon, status: current.status };\r\n            if (current.status === \"SPOOFED\" && prev[plane]?.status !== \"SPOOFED\") audioRef.current.play();\r\n\r\n            newTargets[plane] = { lat: current.lat, lon: current.lon, status: current.status };\r\n            newPredictions[plane] = predicted.map(p => [p.lat, p.lon]);\r\n\r\n            if (!trajectories[plane]) trajectories[plane] = [];\r\n            trajectories[plane].push([current.lat, current.lon]);\r\n\r\n            if (trajectories[plane].length >= 2 && predicted.length > 0) {\r\n              const prevPos = trajectories[plane][trajectories[plane].length - 2];\r\n              const currPos = [current.lat, current.lon];\r\n              const dist = L.latLng(prevPos).distanceTo(L.latLng(currPos));\r\n              const speed = dist;\r\n              const etaDist = L.latLng(currPos).distanceTo(L.latLng(predicted[0]));\r\n              const eta = (speed > 0 ? etaDist / speed : 0).toFixed(1);\r\n              newSpeedETA[plane] = { speed: speed.toFixed(1), eta: eta };\r\n            }\r\n          });\r\n\r\n          setTargets(newTargets);\r\n          setTrajectories({ ...trajectories });\r\n          setPredictions(newPredictions);\r\n          setSpeedETA(newSpeedETA);\r\n\r\n          return updated;\r\n        });\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchPlanes();\r\n    const interval = setInterval(fetchPlanes, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Smooth movement\r\n  useEffect(() => {\r\n    const animate = () => {\r\n      setPlanes(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(targets).forEach(plane => {\r\n          const cur = updated[plane];\r\n          const tgt = targets[plane];\r\n          if (!cur || !tgt) return;\r\n          const step = 0.02;\r\n          cur.lat += (tgt.lat - cur.lat) * step;\r\n          cur.lon += (tgt.lon - cur.lon) * step;\r\n          cur.status = tgt.status;\r\n        });\r\n        return updated;\r\n      });\r\n      requestAnimationFrame(animate);\r\n    };\r\n    requestAnimationFrame(animate);\r\n  }, [targets]);\r\n\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const planeData = planes[plane];\r\n    const dist = L.latLng(pos).distanceTo(L.latLng([planeData.lat, planeData.lon]));\r\n    if (dist > 50000) {\r\n      setPlanes(prev => ({ ...prev, [plane]: { ...prev[plane], status: \"SPOOFED\" } }));\r\n      alert(`${plane} is off trajectory!`);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar planes={planes} speedETA={speedETA} selectedPlane={selectedPlane} setSelectedPlane={setSelectedPlane} />\r\n\r\n      <MapContainer center={indiaCenter} zoom={5} style={{ height: \"90vh\", width: \"80%\" }} zoomControl={true}>\r\n        <LayersControl position=\"topright\">\r\n          <BaseLayer checked name=\"OpenStreetMap\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          </BaseLayer>\r\n          <BaseLayer name=\"ESRI Satellite\">\r\n            <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\r\n          </BaseLayer>\r\n          <BaseLayer name=\"Topographic\">\r\n            <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" />\r\n          </BaseLayer>\r\n        </LayersControl>\r\n\r\n        {Object.keys(planes).map(plane => {\r\n          const pos = planes[plane];\r\n          const pred = predictions[plane] || [];\r\n          const info = speedETA[plane] || {};\r\n          const isSelected = plane === selectedPlane;\r\n\r\n          return (\r\n            <React.Fragment key={plane}>\r\n              {/* Highlight trajectory for selected plane */}\r\n              <Polyline positions={trajectories[plane] || []} color={isSelected ? \"purple\" : \"blue\"} />\r\n              {pred.length > 0 && <Polyline positions={pred} color=\"orange\" dashArray=\"5,10\" />}\r\n\r\n              <Marker\r\n                position={[pos.lat, pos.lon]}\r\n                icon={isSelected ? selectedIcon : planeIcon}\r\n                draggable={true}\r\n                eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}\r\n              >\r\n                <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                  <div style={{ color: pos.status === \"SAFE\" ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                    <div>{plane}: {pos.status}</div>\r\n                    {info.speed && <div>Speed: {info.speed} m/s</div>}\r\n                    {info.eta && <div>ETA to next: {info.eta}s</div>}\r\n                  </div>\r\n                </Tooltip>\r\n              </Marker>\r\n\r\n              {pos.status === \"SPOOFED\" && (\r\n                <Marker\r\n                  position={[pos.lat + 0.05, pos.lon]}\r\n                  icon={alertIcon}\r\n                  interactive={false}\r\n                />\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n\r\n        <Legend />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    keyData,\r\n    { name: \"HMAC\", hash: \"SHA-256\" },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,eAAe;AACjG,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAM;EAAEC;AAAU,CAAC,GAAGJ,aAAa;AACnC,MAAMK,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAEhC,MAAMC,SAAS,GAAG,IAAIL,CAAC,CAACM,IAAI,CAAC;EAC3BC,OAAO,EAAE,uDAAuD;EAChEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,IAAIT,CAAC,CAACM,IAAI,CAAC;EAC9BC,OAAO,EAAE,uDAAuD;EAChEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAME,SAAS,GAAG,IAAIV,CAAC,CAACM,IAAI,CAAC;EAC3BC,OAAO,EAAE,yDAAyD;EAClEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,SAASG,MAAMA,CAAA,EAAG;EAChB,oBACET,OAAA;IAAKU,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBX,OAAA;MAAAW,QAAA,eAAKX,OAAA;QAAMY,KAAK,EAAE;UAACC,KAAK,EAAC,OAAO;UAAEC,UAAU,EAAC;QAAM,CAAE;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/ElB,OAAA;MAAAW,QAAA,eAAKX,OAAA;QAAMY,KAAK,EAAE;UAACC,KAAK,EAAC,KAAK;UAAEC,UAAU,EAAC;QAAM,CAAE;QAAAH,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChFlB,OAAA;MAAAW,QAAA,eAAKX,OAAA;QAAMY,KAAK,EAAE;UAACC,KAAK,EAAC;QAAM,CAAE;QAAAF,QAAA,EAAC;MAAuB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtElB,OAAA;MAAAW,QAAA,eAAKX,OAAA;QAAMY,KAAK,EAAE;UAACC,KAAK,EAAC;QAAQ,CAAE;QAAAF,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjElB,OAAA;MAAAW,QAAA,eAAKX,OAAA;QAAAW,QAAA,EAAM;MAA6B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACC,EAAA,GAVQV,MAAM;AAYf,SAASW,OAAOA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAiB,CAAC,EAAE;EACtE,oBACExB,OAAA;IAAKU,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBX,OAAA;MAAAW,QAAA,EAAI;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdO,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,GAAG,CAACC,KAAK,IAAI;MAChC,MAAMC,IAAI,GAAGP,QAAQ,CAACM,KAAK,CAAC,IAAI,CAAC,CAAC;MAClC,MAAME,UAAU,GAAGF,KAAK,KAAKL,aAAa;MAC1C,oBACEvB,OAAA;QACKU,SAAS,EAAE,cAAcoB,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;QACxDC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACI,KAAK,CAAE;QAAAjB,QAAA,gBAC1CX,OAAA;UAAAW,QAAA,EAASiB;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACG,MAAM,CAACO,KAAK,CAAC,CAACI,MAAM,EAAC,GAChD,EAACH,IAAI,CAACI,KAAK,iBAAIjC,OAAA;UAAAW,QAAA,GAAK,SAAO,EAACkB,IAAI,CAACI,KAAK,EAAC,MAAI;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAChDW,IAAI,CAACK,GAAG,iBAAIlC,OAAA;UAAAW,QAAA,GAAK,OAAK,EAACkB,IAAI,CAACK,GAAG,EAAC,GAAC;QAAA;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GALhCU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACiB,GAAA,GAnBQf,OAAO;AAqBhB,SAASgB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAChB,MAAM,EAAEiB,SAAS,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACkD,YAAY,EAAEC,eAAe,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACoD,OAAO,EAAEC,UAAU,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACiC,QAAQ,EAAEuB,WAAW,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMyD,QAAQ,GAAGvD,MAAM,CAAC,IAAIwD,KAAK,CAAC,WAAW,CAAC,CAAC;;EAE/C;EACAzD,SAAS,CAAC,MAAM;IACd,MAAM0D,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,CAAC,sBAAsB,EAAE,yBAAyB,EAAE,4BAA4B,CAAC;QAClG,MAAMC,SAAS,GAAG,MAAMC,QAAQ,CAACF,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC;QAEtE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,SAAS,EAAEX,QAAQ;YAAEC;UAAU,CAAC;QACzD,CAAC,CAAC;QACF,MAAMW,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAE7BxB,SAAS,CAACyB,IAAI,IAAI;UAChB,MAAMC,OAAO,GAAG;YAAE,GAAGD;UAAK,CAAC;UAC3B,MAAME,UAAU,GAAG,CAAC,CAAC;UACrB,MAAMC,cAAc,GAAG,CAAC,CAAC;UACzB,MAAMC,WAAW,GAAG,CAAC,CAAC;UAEtB1C,MAAM,CAACC,IAAI,CAACmC,IAAI,CAAC,CAACO,OAAO,CAACxC,KAAK,IAAI;YAAA,IAAAyC,WAAA;YACjC,MAAMC,OAAO,GAAGT,IAAI,CAACjC,KAAK,CAAC,CAAC0C,OAAO;YACnC,MAAMC,SAAS,GAAGV,IAAI,CAACjC,KAAK,CAAC,CAAC2C,SAAS;YAEvC,IAAI,CAACR,IAAI,CAACnC,KAAK,CAAC,EAAEoC,OAAO,CAACpC,KAAK,CAAC,GAAG;cAAE4C,GAAG,EAAEF,OAAO,CAACE,GAAG;cAAEC,GAAG,EAAEH,OAAO,CAACG,GAAG;cAAEzC,MAAM,EAAEsC,OAAO,CAACtC;YAAO,CAAC;YACjG,IAAIsC,OAAO,CAACtC,MAAM,KAAK,SAAS,IAAI,EAAAqC,WAAA,GAAAN,IAAI,CAACnC,KAAK,CAAC,cAAAyC,WAAA,uBAAXA,WAAA,CAAarC,MAAM,MAAK,SAAS,EAAEc,QAAQ,CAACwB,OAAO,CAACI,IAAI,CAAC,CAAC;YAE9FT,UAAU,CAACrC,KAAK,CAAC,GAAG;cAAE4C,GAAG,EAAEF,OAAO,CAACE,GAAG;cAAEC,GAAG,EAAEH,OAAO,CAACG,GAAG;cAAEzC,MAAM,EAAEsC,OAAO,CAACtC;YAAO,CAAC;YAClFkC,cAAc,CAACtC,KAAK,CAAC,GAAG2C,SAAS,CAAC5C,GAAG,CAACgD,CAAC,IAAI,CAACA,CAAC,CAACH,GAAG,EAAEG,CAAC,CAACF,GAAG,CAAC,CAAC;YAE1D,IAAI,CAAClC,YAAY,CAACX,KAAK,CAAC,EAAEW,YAAY,CAACX,KAAK,CAAC,GAAG,EAAE;YAClDW,YAAY,CAACX,KAAK,CAAC,CAACgD,IAAI,CAAC,CAACN,OAAO,CAACE,GAAG,EAAEF,OAAO,CAACG,GAAG,CAAC,CAAC;YAEpD,IAAIlC,YAAY,CAACX,KAAK,CAAC,CAACiD,MAAM,IAAI,CAAC,IAAIN,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;cAC3D,MAAMC,OAAO,GAAGvC,YAAY,CAACX,KAAK,CAAC,CAACW,YAAY,CAACX,KAAK,CAAC,CAACiD,MAAM,GAAG,CAAC,CAAC;cACnE,MAAME,OAAO,GAAG,CAACT,OAAO,CAACE,GAAG,EAAEF,OAAO,CAACG,GAAG,CAAC;cAC1C,MAAMO,IAAI,GAAGlF,CAAC,CAACmF,MAAM,CAACH,OAAO,CAAC,CAACI,UAAU,CAACpF,CAAC,CAACmF,MAAM,CAACF,OAAO,CAAC,CAAC;cAC5D,MAAM9C,KAAK,GAAG+C,IAAI;cAClB,MAAMG,OAAO,GAAGrF,CAAC,CAACmF,MAAM,CAACF,OAAO,CAAC,CAACG,UAAU,CAACpF,CAAC,CAACmF,MAAM,CAACV,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cACpE,MAAMrC,GAAG,GAAG,CAACD,KAAK,GAAG,CAAC,GAAGkD,OAAO,GAAGlD,KAAK,GAAG,CAAC,EAAEmD,OAAO,CAAC,CAAC,CAAC;cACxDjB,WAAW,CAACvC,KAAK,CAAC,GAAG;gBAAEK,KAAK,EAAEA,KAAK,CAACmD,OAAO,CAAC,CAAC,CAAC;gBAAElD,GAAG,EAAEA;cAAI,CAAC;YAC5D;UACF,CAAC,CAAC;UAEFQ,UAAU,CAACuB,UAAU,CAAC;UACtBzB,eAAe,CAAC;YAAE,GAAGD;UAAa,CAAC,CAAC;UACpCK,cAAc,CAACsB,cAAc,CAAC;UAC9BrB,WAAW,CAACsB,WAAW,CAAC;UAExB,OAAOH,OAAO;QAChB,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOqB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IAEDrC,WAAW,CAAC,CAAC;IACb,MAAMwC,QAAQ,GAAGC,WAAW,CAACzC,WAAW,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAM0C,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlG,SAAS,CAAC,MAAM;IACd,MAAMqG,OAAO,GAAGA,CAAA,KAAM;MACpBrD,SAAS,CAACyB,IAAI,IAAI;QAChB,MAAMC,OAAO,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC3BtC,MAAM,CAACC,IAAI,CAACe,OAAO,CAAC,CAAC2B,OAAO,CAACxC,KAAK,IAAI;UACpC,MAAMgE,GAAG,GAAG5B,OAAO,CAACpC,KAAK,CAAC;UAC1B,MAAMiE,GAAG,GAAGpD,OAAO,CAACb,KAAK,CAAC;UAC1B,IAAI,CAACgE,GAAG,IAAI,CAACC,GAAG,EAAE;UAClB,MAAMC,IAAI,GAAG,IAAI;UACjBF,GAAG,CAACpB,GAAG,IAAI,CAACqB,GAAG,CAACrB,GAAG,GAAGoB,GAAG,CAACpB,GAAG,IAAIsB,IAAI;UACrCF,GAAG,CAACnB,GAAG,IAAI,CAACoB,GAAG,CAACpB,GAAG,GAAGmB,GAAG,CAACnB,GAAG,IAAIqB,IAAI;UACrCF,GAAG,CAAC5D,MAAM,GAAG6D,GAAG,CAAC7D,MAAM;QACzB,CAAC,CAAC;QACF,OAAOgC,OAAO;MAChB,CAAC,CAAC;MACF+B,qBAAqB,CAACJ,OAAO,CAAC;IAChC,CAAC;IACDI,qBAAqB,CAACJ,OAAO,CAAC;EAChC,CAAC,EAAE,CAAClD,OAAO,CAAC,CAAC;EAEb,MAAMuD,aAAa,GAAGA,CAACpE,KAAK,EAAEqE,CAAC,KAAK;IAClC,MAAMC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC;IAChC,MAAMC,SAAS,GAAGhF,MAAM,CAACO,KAAK,CAAC;IAC/B,MAAMoD,IAAI,GAAGlF,CAAC,CAACmF,MAAM,CAACiB,GAAG,CAAC,CAAChB,UAAU,CAACpF,CAAC,CAACmF,MAAM,CAAC,CAACoB,SAAS,CAAC7B,GAAG,EAAE6B,SAAS,CAAC5B,GAAG,CAAC,CAAC,CAAC;IAC/E,IAAIO,IAAI,GAAG,KAAK,EAAE;MAChB1C,SAAS,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACnC,KAAK,GAAG;UAAE,GAAGmC,IAAI,CAACnC,KAAK,CAAC;UAAEI,MAAM,EAAE;QAAU;MAAE,CAAC,CAAC,CAAC;MAChFsE,KAAK,CAAC,GAAG1E,KAAK,qBAAqB,CAAC;MACpCkB,QAAQ,CAACwB,OAAO,CAACI,IAAI,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACE1E,OAAA;IAAKY,KAAK,EAAE;MAAE2F,OAAO,EAAE;IAAO,CAAE;IAAA5F,QAAA,gBAC9BX,OAAA,CAACoB,OAAO;MAACC,MAAM,EAAEA,MAAO;MAACC,QAAQ,EAAEA,QAAS;MAACC,aAAa,EAAEA,aAAc;MAACC,gBAAgB,EAAEA;IAAiB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjHlB,OAAA,CAACR,YAAY;MAACgH,MAAM,EAAEtG,WAAY;MAACuG,IAAI,EAAE,CAAE;MAAC7F,KAAK,EAAE;QAAE8F,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAM,CAAE;MAACC,WAAW,EAAE,IAAK;MAAAjG,QAAA,gBACrGX,OAAA,CAACH,aAAa;QAACgH,QAAQ,EAAC,UAAU;QAAAlG,QAAA,gBAChCX,OAAA,CAACC,SAAS;UAAC6G,OAAO;UAACC,IAAI,EAAC,eAAe;UAAApG,QAAA,eACrCX,OAAA,CAACP,SAAS;YAACuH,GAAG,EAAC;UAAoD;YAAAjG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACZlB,OAAA,CAACC,SAAS;UAAC8G,IAAI,EAAC,gBAAgB;UAAApG,QAAA,eAC9BX,OAAA,CAACP,SAAS;YAACuH,GAAG,EAAC;UAA+F;YAAAjG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CAAC,eACZlB,OAAA,CAACC,SAAS;UAAC8G,IAAI,EAAC,aAAa;UAAApG,QAAA,eAC3BX,OAAA,CAACP,SAAS;YAACuH,GAAG,EAAC;UAAkD;YAAAjG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEfO,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,GAAG,CAACC,KAAK,IAAI;QAChC,MAAMsE,GAAG,GAAG7E,MAAM,CAACO,KAAK,CAAC;QACzB,MAAMqF,IAAI,GAAGtE,WAAW,CAACf,KAAK,CAAC,IAAI,EAAE;QACrC,MAAMC,IAAI,GAAGP,QAAQ,CAACM,KAAK,CAAC,IAAI,CAAC,CAAC;QAClC,MAAME,UAAU,GAAGF,KAAK,KAAKL,aAAa;QAE1C,oBACEvB,OAAA,CAACZ,KAAK,CAAC8H,QAAQ;UAAAvG,QAAA,gBAEbX,OAAA,CAACJ,QAAQ;YAACuH,SAAS,EAAE5E,YAAY,CAACX,KAAK,CAAC,IAAI,EAAG;YAACf,KAAK,EAAEiB,UAAU,GAAG,QAAQ,GAAG;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACxF+F,IAAI,CAACpC,MAAM,GAAG,CAAC,iBAAI7E,OAAA,CAACJ,QAAQ;YAACuH,SAAS,EAAEF,IAAK;YAACpG,KAAK,EAAC,QAAQ;YAACuG,SAAS,EAAC;UAAM;YAAArG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAEjFlB,OAAA,CAACN,MAAM;YACLmH,QAAQ,EAAE,CAACX,GAAG,CAAC1B,GAAG,EAAE0B,GAAG,CAACzB,GAAG,CAAE;YAC7B4C,IAAI,EAAEvF,UAAU,GAAGvB,YAAY,GAAGJ,SAAU;YAC5CmH,SAAS,EAAE,IAAK;YAChBC,aAAa,EAAE;cAAEC,OAAO,EAAGvB,CAAC,IAAKD,aAAa,CAACpE,KAAK,EAAEqE,CAAC;YAAE,CAAE;YAAAtF,QAAA,eAE3DX,OAAA,CAACL,OAAO;cAAC8H,SAAS,EAAC,KAAK;cAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;cAACC,SAAS;cAAAhH,QAAA,eAClDX,OAAA;gBAAKY,KAAK,EAAE;kBAAEC,KAAK,EAAEqF,GAAG,CAAClE,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,KAAK;kBAAElB,UAAU,EAAE;gBAAO,CAAE;gBAAAH,QAAA,gBACjFX,OAAA;kBAAAW,QAAA,GAAMiB,KAAK,EAAC,IAAE,EAACsE,GAAG,CAAClE,MAAM;gBAAA;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAC/BW,IAAI,CAACI,KAAK,iBAAIjC,OAAA;kBAAAW,QAAA,GAAK,SAAO,EAACkB,IAAI,CAACI,KAAK,EAAC,MAAI;gBAAA;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAChDW,IAAI,CAACK,GAAG,iBAAIlC,OAAA;kBAAAW,QAAA,GAAK,eAAa,EAACkB,IAAI,CAACK,GAAG,EAAC,GAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,EAERgF,GAAG,CAAClE,MAAM,KAAK,SAAS,iBACvBhC,OAAA,CAACN,MAAM;YACLmH,QAAQ,EAAE,CAACX,GAAG,CAAC1B,GAAG,GAAG,IAAI,EAAE0B,GAAG,CAACzB,GAAG,CAAE;YACpC4C,IAAI,EAAE7G,SAAU;YAChBoH,WAAW,EAAE;UAAM;YAAA7G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CACF;QAAA,GA1BkBU,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2BV,CAAC;MAErB,CAAC,CAAC,eAEFlB,OAAA,CAACS,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACmB,EAAA,CAlKQD,GAAG;AAAAyF,GAAA,GAAHzF,GAAG;AAoKZ,eAAee,QAAQA,CAAC2E,OAAO,EAAEC,GAAG,EAAE;EACpC,MAAMC,GAAG,GAAG,IAAIC,WAAW,CAAC,CAAC;EAC7B,MAAMC,OAAO,GAAGF,GAAG,CAACG,MAAM,CAACJ,GAAG,CAAC;EAC/B,MAAMK,OAAO,GAAGJ,GAAG,CAACG,MAAM,CAACL,OAAO,CAAC;EACnC,MAAMO,SAAS,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,SAAS,CAC7C,KAAK,EACLN,OAAO,EACP;IAAEnB,IAAI,EAAE,MAAM;IAAE0B,IAAI,EAAE;EAAU,CAAC,EACjC,KAAK,EACL,CAAC,MAAM,CACT,CAAC;EACD,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACC,MAAM,CAACI,IAAI,CAAC,MAAM,EAAEN,SAAS,EAAED,OAAO,CAAC;EAChE,OAAOQ,KAAK,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACJ,GAAG,CAAC,CAAC,CAAC/G,GAAG,CAACoH,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC7F,IAAI,CAAC,EAAE,CAAC;AAC3F;AAEA,eAAehB,GAAG;AAAC,IAAAjB,EAAA,EAAAgB,GAAA,EAAA0F,GAAA;AAAAqB,YAAA,CAAA/H,EAAA;AAAA+H,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAArB,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}