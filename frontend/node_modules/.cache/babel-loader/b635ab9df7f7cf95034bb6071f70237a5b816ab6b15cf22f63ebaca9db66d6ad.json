{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\nconst planeIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\n  iconSize: [24, 24],\n  iconAnchor: [12, 12]\n});\n\n// Sidebar with status icons + destination check\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane,\n  checkDestination\n}) {\n  _s();\n  const [inputs, setInputs] = useState({});\n  const handleInputChange = (plane, field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        [field]: value\n      }\n    }));\n  };\n  const handleCheck = plane => {\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2708 Active Planes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), Object.keys(planes).map(plane => {\n      var _inputs$plane, _inputs$plane2;\n      const info = speedETA[plane] || {};\n      const isSelected = plane === selectedPlane;\n      const status = planes[plane].status;\n      const statusIcon = status.startsWith(\"SAFE\") ? \"🟢\" : \"🔴\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedPlane(plane),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [statusIcon, \" \", plane]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 53\n        }, this), info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Speed: \", info.speed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 28\n        }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ETA: \", info.eta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dest-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.0001\",\n            placeholder: \"Lat\",\n            value: ((_inputs$plane = inputs[plane]) === null || _inputs$plane === void 0 ? void 0 : _inputs$plane.lat) || \"\",\n            onChange: e => handleInputChange(plane, \"lat\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.0001\",\n            placeholder: \"Lon\",\n            value: ((_inputs$plane2 = inputs[plane]) === null || _inputs$plane2 === void 0 ? void 0 : _inputs$plane2.lon) || \"\",\n            onChange: e => handleInputChange(plane, \"lon\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"spoof-button\",\n            onClick: () => handleCheck(plane),\n            children: \"Spoof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, plane, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n// Zoom Controls\n_s(Sidebar, \"y88sAu/TO9eENcClZmyxJnz9qPA=\");\n_c = Sidebar;\nfunction ZoomControls() {\n  _s2();\n  const map = useMap();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"80px\",\n      right: \"20px\",\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => map.zoomIn(),\n      style: {\n        display: \"block\",\n        marginBottom: \"5px\"\n      },\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => map.zoomOut(),\n      children: \"\\uFF0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s2(ZoomControls, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n_c2 = ZoomControls;\nfunction App() {\n  _s3();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [simulationStarted, setSimulationStarted] = useState(false);\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const [spoofedPaths, setSpoofedPaths] = useState({});\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\n\n  // Fetch trajectories once at start\n  const startSimulation = async () => {\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        csv_files: csvFiles,\n        signature\n      })\n    });\n    const data = await res.json();\n    const trajs = {};\n    const startPositions = {};\n    Object.keys(data).forEach(plane => {\n      const allPoints = data[plane].trajectory;\n      const interpolated = interpolatePath(allPoints, 60);\n      trajs[plane] = interpolated;\n      startPositions[plane] = {\n        lat: interpolated[0].lat,\n        lon: interpolated[0].lon,\n        status: \"SAFE\"\n      };\n    });\n    setPlanes(startPositions);\n    setTrajectories(trajs);\n    setSimulationStarted(true);\n  };\n\n  // Step along trajectory (1 point per second)\n  useEffect(() => {\n    if (!simulationStarted) return;\n    const intervals = {};\n    Object.keys(trajectories).forEach(plane => {\n      if (spoofedPaths[plane]) return; // stop moving spoofed planes\n\n      let index = 0;\n      intervals[plane] = setInterval(() => {\n        setPlanes(prev => {\n          if (index < trajectories[plane].length) {\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\n            const currPos = trajectories[plane][index];\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\n            const speed = (dist * 3.6).toFixed(1);\n            const eta = trajectories[plane].length - index + \"s\";\n\n            // speed check (very rough example)\n            if (parseFloat(speed) > 3000) {\n              return {\n                ...prev,\n                [plane]: {\n                  ...prev[plane],\n                  status: \"SPOOFED (Impossible Speed)\"\n                }\n              };\n            }\n            setSpeedETA(old => ({\n              ...old,\n              [plane]: {\n                speed,\n                eta\n              }\n            }));\n            return {\n              ...prev,\n              [plane]: {\n                ...prev[plane],\n                lat: currPos.lat,\n                lon: currPos.lon,\n                status: \"SAFE\"\n              }\n            };\n          }\n          return prev;\n        });\n        index++;\n      }, 1000);\n    });\n    return () => Object.values(intervals).forEach(clearInterval);\n  }, [simulationStarted, trajectories, spoofedPaths]);\n\n  // Drag spoof detection\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const lastCorrect = planes[plane];\n    setSpoofedPaths(prev => ({\n      ...prev,\n      [plane]: [[lastCorrect.lat, lastCorrect.lon], [pos.lat, pos.lng]]\n    }));\n    setPlanes(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        lat: pos.lat,\n        lon: pos.lng,\n        status: \"SPOOFED (Unrealistic Location Change)\"\n      }\n    }));\n    alert(`${plane} marked as SPOOFED: Unrealistic Location Change`);\n    audioRef.current.play();\n  };\n\n  // Destination check\n  const checkDestination = (plane, lat, lon) => {\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\n    setPlanes(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        lat,\n        lon\n      }\n    }));\n    if (d > 50000) {\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          status: \"SPOOFED (Impossible Destination)\"\n        }\n      }));\n      setSpoofedPaths(prev => ({\n        ...prev,\n        [plane]: [[trajectories[plane][trajectories[plane].length - 2].lat, trajectories[plane][trajectories[plane].length - 2].lon], [lat, lon]]\n      }));\n      alert(`${plane} marked as SPOOFED: Impossible Destination`);\n    } else {\n      alert(`${plane} destination verified as correct.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane,\n      checkDestination: checkDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"88%\",\n        position: \"relative\"\n      },\n      children: [!simulationStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: startSimulation,\n        children: \"Start Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: indiaCenter,\n        zoom: 5,\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ZoomControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"ESRI Satellite\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), Object.keys(planes).map(plane => {\n          const pos = planes[plane];\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Polyline, {\n              positions: (trajectories[plane] || []).map(p => [p.lat, p.lon]),\n              color: \"green\",\n              dashArray: \"6,8\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), spoofedPaths[plane] && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: spoofedPaths[plane],\n              color: \"red\",\n              dashArray: \"6,8\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat, pos.lon],\n              icon: planeIcon,\n              draggable: true,\n              eventHandlers: {\n                dragend: e => handleDragEnd(plane, e)\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                direction: \"top\",\n                offset: [0, -20],\n                permanent: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: pos.status.startsWith(\"SAFE\") ? \"green\" : \"red\",\n                    fontWeight: \"bold\"\n                  },\n                  children: [plane, \": \", pos.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), pos.status.startsWith(\"SPOOFED\") && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat + 0.05, pos.lon],\n              icon: alertIcon,\n              interactive: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, plane, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Helpers ---\n_s3(App, \"aSsZbl/plpSeFJPPltqlYxCykMo=\");\n_c3 = App;\nfunction interpolatePath(points, steps) {\n  if (points.length < 2) return points;\n  const interpolated = [];\n  for (let i = 0; i < steps; i++) {\n    const t = i / (steps - 1);\n    const seg = t * (points.length - 1);\n    const idx = Math.floor(seg);\n    const frac = seg - idx;\n    if (idx >= points.length - 1) {\n      interpolated.push(points[points.length - 1]);\n    } else {\n      const p1 = points[idx];\n      const p2 = points[idx + 1];\n      interpolated.push({\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\n        status: \"SAFE\"\n      });\n    }\n  }\n  return interpolated;\n}\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"ZoomControls\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","useMap","L","jsxDEV","_jsxDEV","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","process","env","PUBLIC_URL","iconSize","iconAnchor","alertIcon","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","checkDestination","_s","inputs","setInputs","handleInputChange","plane","field","value","prev","handleCheck","lat","lon","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_inputs$plane","_inputs$plane2","info","isSelected","status","statusIcon","startsWith","onClick","speed","eta","type","step","placeholder","onChange","e","target","_c","ZoomControls","_s2","style","position","top","right","zIndex","zoomIn","display","marginBottom","zoomOut","_c2","App","_s3","setPlanes","trajectories","setTrajectories","simulationStarted","setSimulationStarted","setSpeedETA","spoofedPaths","setSpoofedPaths","audioRef","Audio","startSimulation","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","data","json","trajs","startPositions","forEach","allPoints","trajectory","interpolated","interpolatePath","intervals","index","setInterval","length","prevPos","currPos","dist","latLng","distanceTo","toFixed","old","values","clearInterval","handleDragEnd","pos","getLatLng","lastCorrect","lng","alert","current","play","originalDest","d","width","center","zoom","height","checked","name","url","Fragment","positions","p","color","dashArray","weight","icon","draggable","eventHandlers","dragend","direction","offset","permanent","fontWeight","interactive","_c3","points","steps","i","t","seg","idx","Math","floor","frac","push","p1","p2","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/ACER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl, useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\";\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 16]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12]\r\n});\r\n\r\n// Sidebar with status icons + destination check\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane, checkDestination }) {\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleInputChange = (plane, field, value) => {\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [plane]: {\r\n        ...prev[plane],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (plane) => {\r\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\r\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>✈ Active Planes</h3>\r\n      {Object.keys(planes).map(plane => {\r\n        const info = speedETA[plane] || {};\r\n        const isSelected = plane === selectedPlane;\r\n        const status = planes[plane].status;\r\n        const statusIcon = status.startsWith(\"SAFE\") ? \"🟢\" : \"🔴\";\r\n\r\n        return (\r\n          <div\r\n            key={plane}\r\n            className={`plane-item ${isSelected ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelectedPlane(plane)}\r\n          >\r\n            <strong>{statusIcon} {plane}</strong> — <span>{status}</span>\r\n            {info.speed && <div>Speed: {info.speed} km/h</div>}\r\n            {info.eta && <div>ETA: {info.eta}</div>}\r\n\r\n            {/* Destination input */}\r\n            <div className=\"dest-check\">\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.0001\"\r\n                placeholder=\"Lat\"\r\n                value={inputs[plane]?.lat || \"\"}\r\n                onChange={(e) => handleInputChange(plane, \"lat\", e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.0001\"\r\n                placeholder=\"Lon\"\r\n                value={inputs[plane]?.lon || \"\"}\r\n                onChange={(e) => handleInputChange(plane, \"lon\", e.target.value)}\r\n              />\r\n              <button className=\"spoof-button\" onClick={() => handleCheck(plane)}>Spoof</button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Zoom Controls\r\nfunction ZoomControls() {\r\n  const map = useMap();\r\n  return (\r\n    <div style={{ position: \"absolute\", top: \"80px\", right: \"20px\", zIndex: 1000 }}>\r\n      <button onClick={() => map.zoomIn()} style={{ display: \"block\", marginBottom: \"5px\" }}>＋</button>\r\n      <button onClick={() => map.zoomOut()}>－</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [simulationStarted, setSimulationStarted] = useState(false);\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const [spoofedPaths, setSpoofedPaths] = useState({});\r\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\r\n\r\n  // Fetch trajectories once at start\r\n  const startSimulation = async () => {\r\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\r\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ csv_files: csvFiles, signature })\r\n    });\r\n    const data = await res.json();\r\n\r\n    const trajs = {};\r\n    const startPositions = {};\r\n    Object.keys(data).forEach(plane => {\r\n      const allPoints = data[plane].trajectory;\r\n      const interpolated = interpolatePath(allPoints, 60);\r\n      trajs[plane] = interpolated;\r\n      startPositions[plane] = {\r\n        lat: interpolated[0].lat,\r\n        lon: interpolated[0].lon,\r\n        status: \"SAFE\"\r\n      };\r\n    });\r\n\r\n    setPlanes(startPositions);\r\n    setTrajectories(trajs);\r\n    setSimulationStarted(true);\r\n  };\r\n\r\n  // Step along trajectory (1 point per second)\r\n  useEffect(() => {\r\n    if (!simulationStarted) return;\r\n    const intervals = {};\r\n\r\n    Object.keys(trajectories).forEach(plane => {\r\n      if (spoofedPaths[plane]) return; // stop moving spoofed planes\r\n\r\n      let index = 0;\r\n      intervals[plane] = setInterval(() => {\r\n        setPlanes(prev => {\r\n          if (index < trajectories[plane].length) {\r\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\r\n            const currPos = trajectories[plane][index];\r\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\r\n            const speed = (dist * 3.6).toFixed(1);\r\n            const eta = (trajectories[plane].length - index) + \"s\";\r\n\r\n            // speed check (very rough example)\r\n            if (parseFloat(speed) > 3000) {\r\n              return {\r\n                ...prev,\r\n                [plane]: { ...prev[plane], status: \"SPOOFED (Impossible Speed)\" }\r\n              };\r\n            }\r\n\r\n            setSpeedETA(old => ({ ...old, [plane]: { speed, eta } }));\r\n\r\n            return {\r\n              ...prev,\r\n              [plane]: {\r\n                ...prev[plane],\r\n                lat: currPos.lat,\r\n                lon: currPos.lon,\r\n                status: \"SAFE\"\r\n              }\r\n            };\r\n          }\r\n          return prev;\r\n        });\r\n        index++;\r\n      }, 1000);\r\n    });\r\n\r\n    return () => Object.values(intervals).forEach(clearInterval);\r\n  }, [simulationStarted, trajectories, spoofedPaths]);\r\n\r\n  // Drag spoof detection\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const lastCorrect = planes[plane];\r\n\r\n    setSpoofedPaths(prev => ({\r\n      ...prev,\r\n      [plane]: [[lastCorrect.lat, lastCorrect.lon], [pos.lat, pos.lng]]\r\n    }));\r\n\r\n    setPlanes(prev => ({\r\n      ...prev,\r\n      [plane]: { ...prev[plane], lat: pos.lat, lon: pos.lng, status: \"SPOOFED (Unrealistic Location Change)\" }\r\n    }));\r\n\r\n    alert(`${plane} marked as SPOOFED: Unrealistic Location Change`);\r\n    audioRef.current.play();\r\n  };\r\n\r\n  // Destination check\r\n  const checkDestination = (plane, lat, lon) => {\r\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\r\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\r\n\r\n    setPlanes(prev => ({\r\n      ...prev,\r\n      [plane]: { ...prev[plane], lat, lon }\r\n    }));\r\n\r\n    if (d > 50000) {\r\n      setPlanes(prev => ({\r\n        ...prev,\r\n        [plane]: { ...prev[plane], status: \"SPOOFED (Impossible Destination)\" }\r\n      }));\r\n      setSpoofedPaths(prev => ({\r\n        ...prev,\r\n        [plane]: [[trajectories[plane][trajectories[plane].length - 2].lat,\r\n                   trajectories[plane][trajectories[plane].length - 2].lon], [lat, lon]]\r\n      }));\r\n      alert(`${plane} marked as SPOOFED: Impossible Destination`);\r\n    } else {\r\n      alert(`${plane} destination verified as correct.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar\r\n        planes={planes}\r\n        speedETA={speedETA}\r\n        selectedPlane={selectedPlane}\r\n        setSelectedPlane={setSelectedPlane}\r\n        checkDestination={checkDestination}\r\n      />\r\n      <div style={{ width: \"88%\", position: \"relative\" }}>\r\n        {!simulationStarted && (\r\n          <button className=\"start-button\" onClick={startSimulation}>\r\n            Start Simulation\r\n          </button>\r\n        )}\r\n\r\n        <MapContainer center={indiaCenter} zoom={5} style={{ height: \"100vh\", width: \"100%\" }}>\r\n          <ZoomControls />\r\n          <LayersControl position=\"topright\">\r\n            <BaseLayer checked name=\"OpenStreetMap\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            </BaseLayer>\r\n            <BaseLayer name=\"ESRI Satellite\">\r\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\r\n            </BaseLayer>\r\n          </LayersControl>\r\n\r\n          {Object.keys(planes).map(plane => {\r\n            const pos = planes[plane];\r\n            return (\r\n              <React.Fragment key={plane}>\r\n                {/* Green dotted original path */}\r\n                <Polyline positions={(trajectories[plane] || []).map(p => [p.lat, p.lon])}\r\n                          color=\"green\" dashArray=\"6,8\" weight={3} />\r\n\r\n                {/* Red dotted spoof path */}\r\n                {spoofedPaths[plane] && (\r\n                  <Polyline positions={spoofedPaths[plane]} color=\"red\" dashArray=\"6,8\" weight={3} />\r\n                )}\r\n\r\n                <Marker\r\n                  position={[pos.lat, pos.lon]}\r\n                  icon={planeIcon}\r\n                  draggable={true}\r\n                  eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}\r\n                >\r\n                  <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                    <div style={{ color: pos.status.startsWith(\"SAFE\") ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                      {plane}: {pos.status}\r\n                    </div>\r\n                  </Tooltip>\r\n                </Marker>\r\n\r\n                {pos.status.startsWith(\"SPOOFED\") && (\r\n                  <Marker position={[pos.lat + 0.05, pos.lon]} icon={alertIcon} interactive={false} />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// --- Helpers ---\r\nfunction interpolatePath(points, steps) {\r\n  if (points.length < 2) return points;\r\n  const interpolated = [];\r\n  for (let i = 0; i < steps; i++) {\r\n    const t = i / (steps - 1);\r\n    const seg = t * (points.length - 1);\r\n    const idx = Math.floor(seg);\r\n    const frac = seg - idx;\r\n    if (idx >= points.length - 1) {\r\n      interpolated.push(points[points.length - 1]);\r\n    } else {\r\n      const p1 = points[idx];\r\n      const p2 = points[idx + 1];\r\n      interpolated.push({\r\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\r\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\r\n        status: \"SAFE\"\r\n      });\r\n    }\r\n  }\r\n  return interpolated;\r\n}\r\n\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    keyData,\r\n    { name: \"HMAC\", hash: \"SHA-256\" },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,QAAQ,eAAe;AACzG,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAM;EAAEC;AAAU,CAAC,GAAGL,aAAa;AACnC,MAAMM,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAEhC,MAAMC,SAAS,GAAG,IAAIL,CAAC,CAACM,IAAI,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,YAAY;EAC9CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG,IAAIb,CAAC,CAACM,IAAI,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,YAAY;EAC9CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACrB,CAAC,CAAC;;AAEF;AACA,SAASE,OAAOA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACxF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMiC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACjDJ,SAAS,CAACK,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP,CAACH,KAAK,GAAG;QACP,GAAGG,IAAI,CAACH,KAAK,CAAC;QACd,CAACC,KAAK,GAAGC;MACX;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,WAAW,GAAIJ,KAAK,IAAK;IAC7B,IAAIH,MAAM,CAACG,KAAK,CAAC,IAAIH,MAAM,CAACG,KAAK,CAAC,CAACK,GAAG,IAAIR,MAAM,CAACG,KAAK,CAAC,CAACM,GAAG,EAAE;MAC3DX,gBAAgB,CAACK,KAAK,EAAEO,UAAU,CAACV,MAAM,CAACG,KAAK,CAAC,CAACK,GAAG,CAAC,EAAEE,UAAU,CAACV,MAAM,CAACG,KAAK,CAAC,CAACM,GAAG,CAAC,CAAC;IACvF;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB/B,OAAA;MAAA+B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBC,MAAM,CAACC,IAAI,CAACxB,MAAM,CAAC,CAACyB,GAAG,CAAChB,KAAK,IAAI;MAAA,IAAAiB,aAAA,EAAAC,cAAA;MAChC,MAAMC,IAAI,GAAG3B,QAAQ,CAACQ,KAAK,CAAC,IAAI,CAAC,CAAC;MAClC,MAAMoB,UAAU,GAAGpB,KAAK,KAAKP,aAAa;MAC1C,MAAM4B,MAAM,GAAG9B,MAAM,CAACS,KAAK,CAAC,CAACqB,MAAM;MACnC,MAAMC,UAAU,GAAGD,MAAM,CAACE,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI;MAE1D,oBACE7C,OAAA;QAEE8B,SAAS,EAAE,cAAcY,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;QACxDI,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAACM,KAAK,CAAE;QAAAS,QAAA,gBAEvC/B,OAAA;UAAA+B,QAAA,GAASa,UAAU,EAAC,GAAC,EAACtB,KAAK;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,YAAG,eAAAnC,OAAA;UAAA+B,QAAA,EAAOY;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC5DM,IAAI,CAACM,KAAK,iBAAI/C,OAAA;UAAA+B,QAAA,GAAK,SAAO,EAACU,IAAI,CAACM,KAAK,EAAC,OAAK;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACjDM,IAAI,CAACO,GAAG,iBAAIhD,OAAA;UAAA+B,QAAA,GAAK,OAAK,EAACU,IAAI,CAACO,GAAG;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGvCnC,OAAA;UAAK8B,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/B,OAAA;YACEiD,IAAI,EAAC,QAAQ;YACbC,IAAI,EAAC,QAAQ;YACbC,WAAW,EAAC,KAAK;YACjB3B,KAAK,EAAE,EAAAe,aAAA,GAAApB,MAAM,CAACG,KAAK,CAAC,cAAAiB,aAAA,uBAAbA,aAAA,CAAeZ,GAAG,KAAI,EAAG;YAChCyB,QAAQ,EAAGC,CAAC,IAAKhC,iBAAiB,CAACC,KAAK,EAAE,KAAK,EAAE+B,CAAC,CAACC,MAAM,CAAC9B,KAAK;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,eACFnC,OAAA;YACEiD,IAAI,EAAC,QAAQ;YACbC,IAAI,EAAC,QAAQ;YACbC,WAAW,EAAC,KAAK;YACjB3B,KAAK,EAAE,EAAAgB,cAAA,GAAArB,MAAM,CAACG,KAAK,CAAC,cAAAkB,cAAA,uBAAbA,cAAA,CAAeZ,GAAG,KAAI,EAAG;YAChCwB,QAAQ,EAAGC,CAAC,IAAKhC,iBAAiB,CAACC,KAAK,EAAE,KAAK,EAAE+B,CAAC,CAACC,MAAM,CAAC9B,KAAK;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,eACFnC,OAAA;YAAQ8B,SAAS,EAAC,cAAc;YAACgB,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACJ,KAAK,CAAE;YAAAS,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC;MAAA,GAzBDb,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0BP,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;;AAEA;AAAAjB,EAAA,CA/DSN,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AAgEhB,SAAS4C,YAAYA,CAAA,EAAG;EAAAC,GAAA;EACtB,MAAMnB,GAAG,GAAGzC,MAAM,CAAC,CAAC;EACpB,oBACEG,OAAA;IAAK0D,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAK,CAAE;IAAA/B,QAAA,gBAC7E/B,OAAA;MAAQ8C,OAAO,EAAEA,CAAA,KAAMR,GAAG,CAACyB,MAAM,CAAC,CAAE;MAACL,KAAK,EAAE;QAAEM,OAAO,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAlC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjGnC,OAAA;MAAQ8C,OAAO,EAAEA,CAAA,KAAMR,GAAG,CAAC4B,OAAO,CAAC,CAAE;MAAAnC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACsB,GAAA,CARQD,YAAY;EAAA,QACP3D,MAAM;AAAA;AAAAsE,GAAA,GADXX,YAAY;AAUrB,SAASY,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACxD,MAAM,EAAEyD,SAAS,CAAC,GAAGlF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACmF,YAAY,EAAEC,eAAe,CAAC,GAAGpF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACqF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtF,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC0B,QAAQ,EAAE6D,WAAW,CAAC,GAAGvF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACwF,YAAY,EAAEC,eAAe,CAAC,GAAGzF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM0F,QAAQ,GAAGxF,MAAM,CAAC,IAAIyF,KAAK,CAAC,4DAA4D,CAAC,CAAC;;EAEhG;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,QAAQ,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;IAC3D,MAAMC,SAAS,GAAG,MAAMC,QAAQ,CAACF,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC;IAEtE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAEX,QAAQ;QAAEC;MAAU,CAAC;IACzD,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAE7B,MAAMC,KAAK,GAAG,CAAC,CAAC;IAChB,MAAMC,cAAc,GAAG,CAAC,CAAC;IACzB5D,MAAM,CAACC,IAAI,CAACwD,IAAI,CAAC,CAACI,OAAO,CAAC3E,KAAK,IAAI;MACjC,MAAM4E,SAAS,GAAGL,IAAI,CAACvE,KAAK,CAAC,CAAC6E,UAAU;MACxC,MAAMC,YAAY,GAAGC,eAAe,CAACH,SAAS,EAAE,EAAE,CAAC;MACnDH,KAAK,CAACzE,KAAK,CAAC,GAAG8E,YAAY;MAC3BJ,cAAc,CAAC1E,KAAK,CAAC,GAAG;QACtBK,GAAG,EAAEyE,YAAY,CAAC,CAAC,CAAC,CAACzE,GAAG;QACxBC,GAAG,EAAEwE,YAAY,CAAC,CAAC,CAAC,CAACxE,GAAG;QACxBe,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF2B,SAAS,CAAC0B,cAAc,CAAC;IACzBxB,eAAe,CAACuB,KAAK,CAAC;IACtBrB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACArF,SAAS,CAAC,MAAM;IACd,IAAI,CAACoF,iBAAiB,EAAE;IACxB,MAAM6B,SAAS,GAAG,CAAC,CAAC;IAEpBlE,MAAM,CAACC,IAAI,CAACkC,YAAY,CAAC,CAAC0B,OAAO,CAAC3E,KAAK,IAAI;MACzC,IAAIsD,YAAY,CAACtD,KAAK,CAAC,EAAE,OAAO,CAAC;;MAEjC,IAAIiF,KAAK,GAAG,CAAC;MACbD,SAAS,CAAChF,KAAK,CAAC,GAAGkF,WAAW,CAAC,MAAM;QACnClC,SAAS,CAAC7C,IAAI,IAAI;UAChB,IAAI8E,KAAK,GAAGhC,YAAY,CAACjD,KAAK,CAAC,CAACmF,MAAM,EAAE;YACtC,MAAMC,OAAO,GAAGH,KAAK,GAAG,CAAC,GAAGhC,YAAY,CAACjD,KAAK,CAAC,CAACiF,KAAK,GAAG,CAAC,CAAC,GAAGhC,YAAY,CAACjD,KAAK,CAAC,CAAC,CAAC,CAAC;YACnF,MAAMqF,OAAO,GAAGpC,YAAY,CAACjD,KAAK,CAAC,CAACiF,KAAK,CAAC;YAC1C,MAAMK,IAAI,GAAG9G,CAAC,CAAC+G,MAAM,CAACH,OAAO,CAAC/E,GAAG,EAAE+E,OAAO,CAAC9E,GAAG,CAAC,CAACkF,UAAU,CAAChH,CAAC,CAAC+G,MAAM,CAACF,OAAO,CAAChF,GAAG,EAAEgF,OAAO,CAAC/E,GAAG,CAAC,CAAC;YAC9F,MAAMmB,KAAK,GAAG,CAAC6D,IAAI,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;YACrC,MAAM/D,GAAG,GAAIuB,YAAY,CAACjD,KAAK,CAAC,CAACmF,MAAM,GAAGF,KAAK,GAAI,GAAG;;YAEtD;YACA,IAAI1E,UAAU,CAACkB,KAAK,CAAC,GAAG,IAAI,EAAE;cAC5B,OAAO;gBACL,GAAGtB,IAAI;gBACP,CAACH,KAAK,GAAG;kBAAE,GAAGG,IAAI,CAACH,KAAK,CAAC;kBAAEqB,MAAM,EAAE;gBAA6B;cAClE,CAAC;YACH;YAEAgC,WAAW,CAACqC,GAAG,KAAK;cAAE,GAAGA,GAAG;cAAE,CAAC1F,KAAK,GAAG;gBAAEyB,KAAK;gBAAEC;cAAI;YAAE,CAAC,CAAC,CAAC;YAEzD,OAAO;cACL,GAAGvB,IAAI;cACP,CAACH,KAAK,GAAG;gBACP,GAAGG,IAAI,CAACH,KAAK,CAAC;gBACdK,GAAG,EAAEgF,OAAO,CAAChF,GAAG;gBAChBC,GAAG,EAAE+E,OAAO,CAAC/E,GAAG;gBAChBe,MAAM,EAAE;cACV;YACF,CAAC;UACH;UACA,OAAOlB,IAAI;QACb,CAAC,CAAC;QACF8E,KAAK,EAAE;MACT,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;IAEF,OAAO,MAAMnE,MAAM,CAAC6E,MAAM,CAACX,SAAS,CAAC,CAACL,OAAO,CAACiB,aAAa,CAAC;EAC9D,CAAC,EAAE,CAACzC,iBAAiB,EAAEF,YAAY,EAAEK,YAAY,CAAC,CAAC;;EAEnD;EACA,MAAMuC,aAAa,GAAGA,CAAC7F,KAAK,EAAE+B,CAAC,KAAK;IAClC,MAAM+D,GAAG,GAAG/D,CAAC,CAACC,MAAM,CAAC+D,SAAS,CAAC,CAAC;IAChC,MAAMC,WAAW,GAAGzG,MAAM,CAACS,KAAK,CAAC;IAEjCuD,eAAe,CAACpD,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP,CAACH,KAAK,GAAG,CAAC,CAACgG,WAAW,CAAC3F,GAAG,EAAE2F,WAAW,CAAC1F,GAAG,CAAC,EAAE,CAACwF,GAAG,CAACzF,GAAG,EAAEyF,GAAG,CAACG,GAAG,CAAC;IAClE,CAAC,CAAC,CAAC;IAEHjD,SAAS,CAAC7C,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP,CAACH,KAAK,GAAG;QAAE,GAAGG,IAAI,CAACH,KAAK,CAAC;QAAEK,GAAG,EAAEyF,GAAG,CAACzF,GAAG;QAAEC,GAAG,EAAEwF,GAAG,CAACG,GAAG;QAAE5E,MAAM,EAAE;MAAwC;IACzG,CAAC,CAAC,CAAC;IAEH6E,KAAK,CAAC,GAAGlG,KAAK,iDAAiD,CAAC;IAChEwD,QAAQ,CAAC2C,OAAO,CAACC,IAAI,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMzG,gBAAgB,GAAGA,CAACK,KAAK,EAAEK,GAAG,EAAEC,GAAG,KAAK;IAC5C,MAAM+F,YAAY,GAAGpD,YAAY,CAACjD,KAAK,CAAC,CAACiD,YAAY,CAACjD,KAAK,CAAC,CAACmF,MAAM,GAAG,CAAC,CAAC;IACxE,MAAMmB,CAAC,GAAG9H,CAAC,CAAC+G,MAAM,CAAClF,GAAG,EAAEC,GAAG,CAAC,CAACkF,UAAU,CAAChH,CAAC,CAAC+G,MAAM,CAACc,YAAY,CAAChG,GAAG,EAAEgG,YAAY,CAAC/F,GAAG,CAAC,CAAC;IAErF0C,SAAS,CAAC7C,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP,CAACH,KAAK,GAAG;QAAE,GAAGG,IAAI,CAACH,KAAK,CAAC;QAAEK,GAAG;QAAEC;MAAI;IACtC,CAAC,CAAC,CAAC;IAEH,IAAIgG,CAAC,GAAG,KAAK,EAAE;MACbtD,SAAS,CAAC7C,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACH,KAAK,GAAG;UAAE,GAAGG,IAAI,CAACH,KAAK,CAAC;UAAEqB,MAAM,EAAE;QAAmC;MACxE,CAAC,CAAC,CAAC;MACHkC,eAAe,CAACpD,IAAI,KAAK;QACvB,GAAGA,IAAI;QACP,CAACH,KAAK,GAAG,CAAC,CAACiD,YAAY,CAACjD,KAAK,CAAC,CAACiD,YAAY,CAACjD,KAAK,CAAC,CAACmF,MAAM,GAAG,CAAC,CAAC,CAAC9E,GAAG,EACvD4C,YAAY,CAACjD,KAAK,CAAC,CAACiD,YAAY,CAACjD,KAAK,CAAC,CAACmF,MAAM,GAAG,CAAC,CAAC,CAAC7E,GAAG,CAAC,EAAE,CAACD,GAAG,EAAEC,GAAG,CAAC;MACjF,CAAC,CAAC,CAAC;MACH4F,KAAK,CAAC,GAAGlG,KAAK,4CAA4C,CAAC;IAC7D,CAAC,MAAM;MACLkG,KAAK,CAAC,GAAGlG,KAAK,mCAAmC,CAAC;IACpD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAK0D,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAO,CAAE;IAAAjC,QAAA,gBAC9B/B,OAAA,CAACY,OAAO;MACNC,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAEA,gBAAiB;MACnCC,gBAAgB,EAAEA;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFnC,OAAA;MAAK0D,KAAK,EAAE;QAAEmE,KAAK,EAAE,KAAK;QAAElE,QAAQ,EAAE;MAAW,CAAE;MAAA5B,QAAA,GAChD,CAAC0C,iBAAiB,iBACjBzE,OAAA;QAAQ8B,SAAS,EAAC,cAAc;QAACgB,OAAO,EAAEkC,eAAgB;QAAAjD,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eAEDnC,OAAA,CAACT,YAAY;QAACuI,MAAM,EAAE5H,WAAY;QAAC6H,IAAI,EAAE,CAAE;QAACrE,KAAK,EAAE;UAAEsE,MAAM,EAAE,OAAO;UAAEH,KAAK,EAAE;QAAO,CAAE;QAAA9F,QAAA,gBACpF/B,OAAA,CAACwD,YAAY;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChBnC,OAAA,CAACJ,aAAa;UAAC+D,QAAQ,EAAC,UAAU;UAAA5B,QAAA,gBAChC/B,OAAA,CAACC,SAAS;YAACgI,OAAO;YAACC,IAAI,EAAC,eAAe;YAAAnG,QAAA,eACrC/B,OAAA,CAACR,SAAS;cAAC2I,GAAG,EAAC;YAAoD;cAAAnG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eACZnC,OAAA,CAACC,SAAS;YAACiI,IAAI,EAAC,gBAAgB;YAAAnG,QAAA,eAC9B/B,OAAA,CAACR,SAAS;cAAC2I,GAAG,EAAC;YAA+F;cAAAnG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAEfC,MAAM,CAACC,IAAI,CAACxB,MAAM,CAAC,CAACyB,GAAG,CAAChB,KAAK,IAAI;UAChC,MAAM8F,GAAG,GAAGvG,MAAM,CAACS,KAAK,CAAC;UACzB,oBACEtB,OAAA,CAACb,KAAK,CAACiJ,QAAQ;YAAArG,QAAA,gBAEb/B,OAAA,CAACL,QAAQ;cAAC0I,SAAS,EAAE,CAAC9D,YAAY,CAACjD,KAAK,CAAC,IAAI,EAAE,EAAEgB,GAAG,CAACgG,CAAC,IAAI,CAACA,CAAC,CAAC3G,GAAG,EAAE2G,CAAC,CAAC1G,GAAG,CAAC,CAAE;cAChE2G,KAAK,EAAC,OAAO;cAACC,SAAS,EAAC,KAAK;cAACC,MAAM,EAAE;YAAE;cAAAzG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAGpDyC,YAAY,CAACtD,KAAK,CAAC,iBAClBtB,OAAA,CAACL,QAAQ;cAAC0I,SAAS,EAAEzD,YAAY,CAACtD,KAAK,CAAE;cAACiH,KAAK,EAAC,KAAK;cAACC,SAAS,EAAC,KAAK;cAACC,MAAM,EAAE;YAAE;cAAAzG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACnF,eAEDnC,OAAA,CAACP,MAAM;cACLkE,QAAQ,EAAE,CAACyD,GAAG,CAACzF,GAAG,EAAEyF,GAAG,CAACxF,GAAG,CAAE;cAC7B8G,IAAI,EAAEvI,SAAU;cAChBwI,SAAS,EAAE,IAAK;cAChBC,aAAa,EAAE;gBAAEC,OAAO,EAAGxF,CAAC,IAAK8D,aAAa,CAAC7F,KAAK,EAAE+B,CAAC;cAAE,CAAE;cAAAtB,QAAA,eAE3D/B,OAAA,CAACN,OAAO;gBAACoJ,SAAS,EAAC,KAAK;gBAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;gBAACC,SAAS;gBAAAjH,QAAA,eAClD/B,OAAA;kBAAK0D,KAAK,EAAE;oBAAE6E,KAAK,EAAEnB,GAAG,CAACzE,MAAM,CAACE,UAAU,CAAC,MAAM,CAAC,GAAG,OAAO,GAAG,KAAK;oBAAEoG,UAAU,EAAE;kBAAO,CAAE;kBAAAlH,QAAA,GACxFT,KAAK,EAAC,IAAE,EAAC8F,GAAG,CAACzE,MAAM;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,EAERiF,GAAG,CAACzE,MAAM,CAACE,UAAU,CAAC,SAAS,CAAC,iBAC/B7C,OAAA,CAACP,MAAM;cAACkE,QAAQ,EAAE,CAACyD,GAAG,CAACzF,GAAG,GAAG,IAAI,EAAEyF,GAAG,CAACxF,GAAG,CAAE;cAAC8G,IAAI,EAAE/H,SAAU;cAACuI,WAAW,EAAE;YAAM;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACpF;UAAA,GAzBkBb,KAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BV,CAAC;QAErB,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAkC,GAAA,CApMSD,GAAG;AAAA+E,GAAA,GAAH/E,GAAG;AAqMZ,SAASiC,eAAeA,CAAC+C,MAAM,EAAEC,KAAK,EAAE;EACtC,IAAID,MAAM,CAAC3C,MAAM,GAAG,CAAC,EAAE,OAAO2C,MAAM;EACpC,MAAMhD,YAAY,GAAG,EAAE;EACvB,KAAK,IAAIkD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,EAAEC,CAAC,EAAE,EAAE;IAC9B,MAAMC,CAAC,GAAGD,CAAC,IAAID,KAAK,GAAG,CAAC,CAAC;IACzB,MAAMG,GAAG,GAAGD,CAAC,IAAIH,MAAM,CAAC3C,MAAM,GAAG,CAAC,CAAC;IACnC,MAAMgD,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC;IAC3B,MAAMI,IAAI,GAAGJ,GAAG,GAAGC,GAAG;IACtB,IAAIA,GAAG,IAAIL,MAAM,CAAC3C,MAAM,GAAG,CAAC,EAAE;MAC5BL,YAAY,CAACyD,IAAI,CAACT,MAAM,CAACA,MAAM,CAAC3C,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC,MAAM;MACL,MAAMqD,EAAE,GAAGV,MAAM,CAACK,GAAG,CAAC;MACtB,MAAMM,EAAE,GAAGX,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC;MAC1BrD,YAAY,CAACyD,IAAI,CAAC;QAChBlI,GAAG,EAAEmI,EAAE,CAACnI,GAAG,GAAG,CAACoI,EAAE,CAACpI,GAAG,GAAGmI,EAAE,CAACnI,GAAG,IAAIiI,IAAI;QACtChI,GAAG,EAAEkI,EAAE,CAAClI,GAAG,GAAG,CAACmI,EAAE,CAACnI,GAAG,GAAGkI,EAAE,CAAClI,GAAG,IAAIgI,IAAI;QACtCjH,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF;EACA,OAAOyD,YAAY;AACrB;AAEA,eAAejB,QAAQA,CAAC6E,OAAO,EAAEC,GAAG,EAAE;EACpC,MAAMC,GAAG,GAAG,IAAIC,WAAW,CAAC,CAAC;EAC7B,MAAMC,OAAO,GAAGF,GAAG,CAACG,MAAM,CAACJ,GAAG,CAAC;EAC/B,MAAMK,OAAO,GAAGJ,GAAG,CAACG,MAAM,CAACL,OAAO,CAAC;EACnC,MAAMO,SAAS,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,SAAS,CAC7C,KAAK,EACLN,OAAO,EACP;IAAElC,IAAI,EAAE,MAAM;IAAEyC,IAAI,EAAE;EAAU,CAAC,EACjC,KAAK,EACL,CAAC,MAAM,CACT,CAAC;EACD,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACC,MAAM,CAACI,IAAI,CAAC,MAAM,EAAEN,SAAS,EAAED,OAAO,CAAC;EAChE,OAAOQ,KAAK,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACJ,GAAG,CAAC,CAAC,CAACtI,GAAG,CAAC2I,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC/F,IAAI,CAAC,EAAE,CAAC;AAC3F;AAEA,eAAehB,GAAG;AAAC,IAAAb,EAAA,EAAAY,GAAA,EAAAgF,GAAA;AAAAiC,YAAA,CAAA7H,EAAA;AAAA6H,YAAA,CAAAjH,GAAA;AAAAiH,YAAA,CAAAjC,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}