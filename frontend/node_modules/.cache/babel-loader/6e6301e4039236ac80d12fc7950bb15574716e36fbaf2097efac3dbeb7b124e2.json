{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\nconst planeIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\n  iconSize: [24, 24],\n  iconAnchor: [12, 12]\n});\n\n// Sidebar with status icons + destination check\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane,\n  checkDestination\n}) {\n  _s();\n  const [inputs, setInputs] = useState({});\n  const handleInputChange = (plane, field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [plane]: {\n        ...prev[plane],\n        [field]: value\n      }\n    }));\n  };\n  const handleCheck = plane => {\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2708 Active Planes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), Object.keys(planes).map(plane => {\n      var _inputs$plane, _inputs$plane2;\n      const info = speedETA[plane] || {};\n      const isSelected = plane === selectedPlane;\n      const status = planes[plane].status;\n      const statusIcon = status === \"SAFE\" ? \"ðŸŸ¢\" : \"ðŸ”´\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedPlane(plane),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [statusIcon, \" \", plane]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 53\n        }, this), info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Speed: \", info.speed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 28\n        }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ETA: \", info.eta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dest-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.0001\",\n            placeholder: \"Lat\",\n            value: ((_inputs$plane = inputs[plane]) === null || _inputs$plane === void 0 ? void 0 : _inputs$plane.lat) || \"\",\n            onChange: e => handleInputChange(plane, \"lat\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.0001\",\n            placeholder: \"Lon\",\n            value: ((_inputs$plane2 = inputs[plane]) === null || _inputs$plane2 === void 0 ? void 0 : _inputs$plane2.lon) || \"\",\n            onChange: e => handleInputChange(plane, \"lon\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCheck(plane),\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, plane, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"y88sAu/TO9eENcClZmyxJnz9qPA=\");\n_c = Sidebar;\nfunction App() {\n  _s2();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [simulationStarted, setSimulationStarted] = useState(false);\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const [spoofedPaths, setSpoofedPaths] = useState({});\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\n\n  // Fetch trajectories once at start\n  const startSimulation = async () => {\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        csv_files: csvFiles,\n        signature\n      })\n    });\n    const data = await res.json();\n    const trajs = {};\n    const startPositions = {};\n    Object.keys(data).forEach(plane => {\n      const allPoints = data[plane].trajectory;\n      const interpolated = interpolatePath(allPoints, 60);\n      trajs[plane] = interpolated;\n      startPositions[plane] = {\n        lat: interpolated[0].lat,\n        lon: interpolated[0].lon,\n        status: interpolated[0].status\n      };\n    });\n    setPlanes(startPositions);\n    setTrajectories(trajs);\n    setSimulationStarted(true);\n  };\n\n  // Step along trajectory (1 point per second)\n  useEffect(() => {\n    if (!simulationStarted) return;\n    const intervals = {};\n    Object.keys(trajectories).forEach(plane => {\n      if (spoofedPaths[plane]) return; // skip spoofed planes\n\n      let index = 0;\n      intervals[plane] = setInterval(() => {\n        setPlanes(prev => {\n          if (index < trajectories[plane].length) {\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\n            const currPos = trajectories[plane][index];\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\n            const speed = (dist * 3.6).toFixed(1); // km/h approx\n            const eta = trajectories[plane].length - index + \"s\";\n            setSpeedETA(old => ({\n              ...old,\n              [plane]: {\n                speed,\n                eta\n              }\n            }));\n            return {\n              ...prev,\n              [plane]: {\n                ...prev[plane],\n                lat: currPos.lat,\n                lon: currPos.lon,\n                status: currPos.status\n              }\n            };\n          }\n          return prev;\n        });\n        index++;\n      }, 1000);\n    });\n    return () => {\n      Object.values(intervals).forEach(clearInterval);\n    };\n  }, [simulationStarted, trajectories, spoofedPaths]);\n\n  // Random spoof movement generator\n  useEffect(() => {\n    const intervals = {};\n    Object.keys(spoofedPaths).forEach(plane => {\n      intervals[plane] = setInterval(() => {\n        setSpoofedPaths(prev => {\n          const newPath = [...prev[plane]];\n          const last = newPath[newPath.length - 1];\n          const next = [last[0] + (Math.random() - 0.5), last[1] + (Math.random() - 0.5)];\n          newPath.push(next);\n          return {\n            ...prev,\n            [plane]: newPath\n          };\n        });\n        setPlanes(prev => ({\n          ...prev,\n          [plane]: {\n            ...prev[plane],\n            lat: spoofedPaths[plane].slice(-1)[0][0],\n            lon: spoofedPaths[plane].slice(-1)[0][1],\n            status: \"SPOOFED\"\n          }\n        }));\n      }, 2000);\n    });\n    return () => Object.values(intervals).forEach(clearInterval);\n  }, [spoofedPaths]);\n\n  // Drag spoof detection\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const nearest = trajectories[plane] || [];\n    let minDist = Infinity;\n    nearest.forEach(p => {\n      const d = L.latLng(pos).distanceTo(L.latLng([p.lat, p.lon]));\n      if (d < minDist) minDist = d;\n    });\n    if (minDist > 50000) {\n      const spoofPath = [[pos.lat, pos.lng]];\n      setSpoofedPaths(prev => ({\n        ...prev,\n        [plane]: spoofPath\n      }));\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          lat: pos.lat,\n          lon: pos.lng,\n          status: \"SPOOFED\"\n        }\n      }));\n      alert(`${plane} has gone off trajectory! Spoof attack detected.`);\n      audioRef.current.play();\n    }\n  };\n\n  // Destination check\n  const checkDestination = (plane, lat, lon) => {\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\n    if (d > 50000) {\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          status: \"SPOOFED\"\n        }\n      }));\n      setSpoofedPaths(prev => ({\n        ...prev,\n        [plane]: [[lat, lon]]\n      }));\n      alert(`${plane} reported wrong destination! Marked as SPOOFED.`);\n    } else {\n      alert(`${plane} destination verified as correct.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane,\n      checkDestination: checkDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"88%\",\n        position: \"relative\"\n      },\n      children: [!simulationStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        },\n        children: \"Start Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: indiaCenter,\n        zoom: 5,\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"ESRI Satellite\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), Object.keys(planes).map(plane => {\n          const pos = planes[plane];\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Polyline, {\n              positions: (trajectories[plane] || []).map(p => [p.lat, p.lon]),\n              color: \"green\",\n              dashArray: \"5,10\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), spoofedPaths[plane] && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: spoofedPaths[plane],\n              color: \"red\",\n              dashArray: \"5,10\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat, pos.lon],\n              icon: planeIcon,\n              draggable: true,\n              eventHandlers: {\n                dragend: e => handleDragEnd(plane, e)\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                direction: \"top\",\n                offset: [0, -20],\n                permanent: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: pos.status === \"SAFE\" ? \"green\" : \"red\",\n                    fontWeight: \"bold\"\n                  },\n                  children: [plane, \": \", pos.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), pos.status === \"SPOOFED\" && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat + 0.05, pos.lon],\n              icon: alertIcon,\n              interactive: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)]\n          }, plane, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Helpers ---\n_s2(App, \"MfkDNCAlDMnqWdgiLpFQDtKYhDo=\");\n_c2 = App;\nfunction interpolatePath(points, steps) {\n  if (points.length < 2) return points;\n  const interpolated = [];\n  for (let i = 0; i < steps; i++) {\n    const t = i / (steps - 1);\n    const seg = t * (points.length - 1);\n    const idx = Math.floor(seg);\n    const frac = seg - idx;\n    if (idx >= points.length - 1) {\n      interpolated.push(points[points.length - 1]);\n    } else {\n      const p1 = points[idx];\n      const p2 = points[idx + 1];\n      interpolated.push({\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\n        status: \"SAFE\"\n      });\n    }\n  }\n  return interpolated;\n}\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","L","jsxDEV","_jsxDEV","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","process","env","PUBLIC_URL","iconSize","iconAnchor","alertIcon","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","checkDestination","_s","inputs","setInputs","handleInputChange","plane","field","value","prev","handleCheck","lat","lon","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_inputs$plane","_inputs$plane2","info","isSelected","status","statusIcon","onClick","speed","eta","type","step","placeholder","onChange","e","target","_c","App","_s2","setPlanes","trajectories","setTrajectories","simulationStarted","setSimulationStarted","setSpeedETA","spoofedPaths","setSpoofedPaths","audioRef","Audio","startSimulation","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","data","json","trajs","startPositions","forEach","allPoints","trajectory","interpolated","interpolatePath","intervals","index","setInterval","length","prevPos","currPos","dist","latLng","distanceTo","toFixed","old","values","clearInterval","newPath","last","next","Math","random","push","slice","handleDragEnd","pos","getLatLng","nearest","minDist","Infinity","p","d","spoofPath","lng","alert","current","play","originalDest","style","display","width","position","top","left","transform","zIndex","padding","fontSize","cursor","center","zoom","height","checked","name","url","Fragment","positions","color","dashArray","weight","icon","draggable","eventHandlers","dragend","direction","offset","permanent","fontWeight","interactive","_c2","points","steps","i","t","seg","idx","floor","frac","p1","p2","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/ACER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\";\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 16]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12]\r\n});\r\n\r\n// Sidebar with status icons + destination check\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane, checkDestination }) {\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleInputChange = (plane, field, value) => {\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [plane]: {\r\n        ...prev[plane],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (plane) => {\r\n    if (inputs[plane] && inputs[plane].lat && inputs[plane].lon) {\r\n      checkDestination(plane, parseFloat(inputs[plane].lat), parseFloat(inputs[plane].lon));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>âœˆ Active Planes</h3>\r\n      {Object.keys(planes).map(plane => {\r\n        const info = speedETA[plane] || {};\r\n        const isSelected = plane === selectedPlane;\r\n        const status = planes[plane].status;\r\n        const statusIcon = status === \"SAFE\" ? \"ðŸŸ¢\" : \"ðŸ”´\";\r\n\r\n        return (\r\n          <div\r\n            key={plane}\r\n            className={`plane-item ${isSelected ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelectedPlane(plane)}\r\n          >\r\n            <strong>{statusIcon} {plane}</strong> â€” <span>{status}</span>\r\n            {info.speed && <div>Speed: {info.speed} km/h</div>}\r\n            {info.eta && <div>ETA: {info.eta}</div>}\r\n\r\n            {/* Destination input */}\r\n            <div className=\"dest-check\">\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.0001\"\r\n                placeholder=\"Lat\"\r\n                value={inputs[plane]?.lat || \"\"}\r\n                onChange={(e) => handleInputChange(plane, \"lat\", e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.0001\"\r\n                placeholder=\"Lon\"\r\n                value={inputs[plane]?.lon || \"\"}\r\n                onChange={(e) => handleInputChange(plane, \"lon\", e.target.value)}\r\n              />\r\n              <button onClick={() => handleCheck(plane)}>Check</button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [simulationStarted, setSimulationStarted] = useState(false);\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const [spoofedPaths, setSpoofedPaths] = useState({});\r\n  const audioRef = useRef(new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"));\r\n\r\n  // Fetch trajectories once at start\r\n  const startSimulation = async () => {\r\n    const csvFiles = [\"plane1.csv\", \"plane2.csv\", \"plane3.csv\"];\r\n    const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n    const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ csv_files: csvFiles, signature })\r\n    });\r\n    const data = await res.json();\r\n\r\n    const trajs = {};\r\n    const startPositions = {};\r\n    Object.keys(data).forEach(plane => {\r\n      const allPoints = data[plane].trajectory;\r\n      const interpolated = interpolatePath(allPoints, 60);\r\n      trajs[plane] = interpolated;\r\n      startPositions[plane] = {\r\n        lat: interpolated[0].lat,\r\n        lon: interpolated[0].lon,\r\n        status: interpolated[0].status\r\n      };\r\n    });\r\n\r\n    setPlanes(startPositions);\r\n    setTrajectories(trajs);\r\n    setSimulationStarted(true);\r\n  };\r\n\r\n  // Step along trajectory (1 point per second)\r\n  useEffect(() => {\r\n    if (!simulationStarted) return;\r\n    const intervals = {};\r\n\r\n    Object.keys(trajectories).forEach(plane => {\r\n      if (spoofedPaths[plane]) return; // skip spoofed planes\r\n\r\n      let index = 0;\r\n      intervals[plane] = setInterval(() => {\r\n        setPlanes(prev => {\r\n          if (index < trajectories[plane].length) {\r\n            const prevPos = index > 0 ? trajectories[plane][index - 1] : trajectories[plane][0];\r\n            const currPos = trajectories[plane][index];\r\n            const dist = L.latLng(prevPos.lat, prevPos.lon).distanceTo(L.latLng(currPos.lat, currPos.lon));\r\n            const speed = (dist * 3.6).toFixed(1); // km/h approx\r\n            const eta = (trajectories[plane].length - index) + \"s\";\r\n\r\n            setSpeedETA(old => ({ ...old, [plane]: { speed, eta } }));\r\n\r\n            return {\r\n              ...prev,\r\n              [plane]: {\r\n                ...prev[plane],\r\n                lat: currPos.lat,\r\n                lon: currPos.lon,\r\n                status: currPos.status\r\n              }\r\n            };\r\n          }\r\n          return prev;\r\n        });\r\n        index++;\r\n      }, 1000);\r\n    });\r\n\r\n    return () => {\r\n      Object.values(intervals).forEach(clearInterval);\r\n    };\r\n  }, [simulationStarted, trajectories, spoofedPaths]);\r\n\r\n  // Random spoof movement generator\r\n  useEffect(() => {\r\n    const intervals = {};\r\n    Object.keys(spoofedPaths).forEach(plane => {\r\n      intervals[plane] = setInterval(() => {\r\n        setSpoofedPaths(prev => {\r\n          const newPath = [...prev[plane]];\r\n          const last = newPath[newPath.length - 1];\r\n          const next = [last[0] + (Math.random() - 0.5), last[1] + (Math.random() - 0.5)];\r\n          newPath.push(next);\r\n          return { ...prev, [plane]: newPath };\r\n        });\r\n        setPlanes(prev => ({\r\n          ...prev,\r\n          [plane]: { ...prev[plane], lat: spoofedPaths[plane].slice(-1)[0][0], lon: spoofedPaths[plane].slice(-1)[0][1], status: \"SPOOFED\" }\r\n        }));\r\n      }, 2000);\r\n    });\r\n    return () => Object.values(intervals).forEach(clearInterval);\r\n  }, [spoofedPaths]);\r\n\r\n  // Drag spoof detection\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const nearest = trajectories[plane] || [];\r\n    let minDist = Infinity;\r\n    nearest.forEach(p => {\r\n      const d = L.latLng(pos).distanceTo(L.latLng([p.lat, p.lon]));\r\n      if (d < minDist) minDist = d;\r\n    });\r\n\r\n    if (minDist > 50000) {\r\n      const spoofPath = [[pos.lat, pos.lng]];\r\n      setSpoofedPaths(prev => ({ ...prev, [plane]: spoofPath }));\r\n      setPlanes(prev => ({\r\n        ...prev,\r\n        [plane]: { ...prev[plane], lat: pos.lat, lon: pos.lng, status: \"SPOOFED\" }\r\n      }));\r\n      alert(`${plane} has gone off trajectory! Spoof attack detected.`);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  // Destination check\r\n  const checkDestination = (plane, lat, lon) => {\r\n    const originalDest = trajectories[plane][trajectories[plane].length - 1];\r\n    const d = L.latLng(lat, lon).distanceTo(L.latLng(originalDest.lat, originalDest.lon));\r\n    if (d > 50000) {\r\n      setPlanes(prev => ({\r\n        ...prev,\r\n        [plane]: { ...prev[plane], status: \"SPOOFED\" }\r\n      }));\r\n      setSpoofedPaths(prev => ({ ...prev, [plane]: [[lat, lon]] }));\r\n      alert(`${plane} reported wrong destination! Marked as SPOOFED.`);\r\n    } else {\r\n      alert(`${plane} destination verified as correct.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar\r\n        planes={planes}\r\n        speedETA={speedETA}\r\n        selectedPlane={selectedPlane}\r\n        setSelectedPlane={setSelectedPlane}\r\n        checkDestination={checkDestination}\r\n      />\r\n      <div style={{ width: \"88%\", position: \"relative\" }}>\r\n        {!simulationStarted && (\r\n          <button\r\n            onClick={startSimulation}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"20px\",\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              zIndex: 1000,\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            Start Simulation\r\n          </button>\r\n        )}\r\n\r\n        <MapContainer center={indiaCenter} zoom={5} style={{ height: \"100vh\", width: \"100%\" }}>\r\n          <LayersControl position=\"topright\">\r\n            <BaseLayer checked name=\"OpenStreetMap\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            </BaseLayer>\r\n            <BaseLayer name=\"ESRI Satellite\">\r\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\r\n            </BaseLayer>\r\n          </LayersControl>\r\n\r\n          {Object.keys(planes).map(plane => {\r\n            const pos = planes[plane];\r\n            return (\r\n              <React.Fragment key={plane}>\r\n                {/* Original green dotted path */}\r\n                <Polyline positions={(trajectories[plane] || []).map(p => [p.lat, p.lon])} color=\"green\" dashArray=\"5,10\" weight={3} />\r\n\r\n                {/* Spoofed red dotted path */}\r\n                {spoofedPaths[plane] && (\r\n                  <Polyline positions={spoofedPaths[plane]} color=\"red\" dashArray=\"5,10\" weight={3} />\r\n                )}\r\n\r\n                <Marker\r\n                  position={[pos.lat, pos.lon]}\r\n                  icon={planeIcon}\r\n                  draggable={true}\r\n                  eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}\r\n                >\r\n                  <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                    <div style={{ color: pos.status === \"SAFE\" ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                      {plane}: {pos.status}\r\n                    </div>\r\n                  </Tooltip>\r\n                </Marker>\r\n\r\n                {pos.status === \"SPOOFED\" && (\r\n                  <Marker position={[pos.lat + 0.05, pos.lon]} icon={alertIcon} interactive={false} />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// --- Helpers ---\r\nfunction interpolatePath(points, steps) {\r\n  if (points.length < 2) return points;\r\n  const interpolated = [];\r\n  for (let i = 0; i < steps; i++) {\r\n    const t = i / (steps - 1);\r\n    const seg = t * (points.length - 1);\r\n    const idx = Math.floor(seg);\r\n    const frac = seg - idx;\r\n    if (idx >= points.length - 1) {\r\n      interpolated.push(points[points.length - 1]);\r\n    } else {\r\n      const p1 = points[idx];\r\n      const p2 = points[idx + 1];\r\n      interpolated.push({\r\n        lat: p1.lat + (p2.lat - p1.lat) * frac,\r\n        lon: p1.lon + (p2.lon - p1.lon) * frac,\r\n        status: \"SAFE\"\r\n      });\r\n    }\r\n  }\r\n  return interpolated;\r\n}\r\n\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    keyData,\r\n    { name: \"HMAC\", hash: \"SHA-256\" },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}