{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\BugSquash6-Geoshield\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BaseLayer\n} = LayersControl;\nconst indiaCenter = [22.0, 79.0];\n\n// Plane icons\nconst planeIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\",\n  // main plane icon\n  iconSize: [32, 32]\n});\nconst selectedIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/plane-selected.png\",\n  // selected plane icon\n  iconSize: [36, 36]\n});\nconst alertIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\",\n  // off-trajectory icon\n  iconSize: [24, 24]\n});\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"legend\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"green\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u25CF SAFE plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\",\n          fontWeight: \"bold\"\n        },\n        children: \"\\u25CF SPOOFED plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        children: \"\\u2500 Historical trajectory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"\\u2500 Predicted path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0 Alert icon = Off trajectory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = Legend;\nfunction Sidebar({\n  planes,\n  speedETA,\n  selectedPlane,\n  setSelectedPlane\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Planes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), Object.keys(planes).map(plane => {\n      const info = speedETA[plane] || {};\n      const isSelected = plane === selectedPlane;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `plane-item ${isSelected ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedPlane(plane),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: plane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" (\", planes[plane].status, \")\", info.speed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Speed: \", info.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this), info.eta && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ETA: \", info.eta, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this)]\n      }, plane, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Sidebar;\nfunction App() {\n  _s();\n  const [planes, setPlanes] = useState({});\n  const [trajectories, setTrajectories] = useState({});\n  const [targets, setTargets] = useState({});\n  const [predictions, setPredictions] = useState({});\n  const [speedETA, setSpeedETA] = useState({});\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const [simulationStarted, setSimulationStarted] = useState(false);\n  const audioRef = useRef(new Audio(process.env.PUBLIC_URL + \"/beep.mp3\"));\n\n  // Fetch plane data from backend\n  useEffect(() => {\n    const fetchPlanes = async () => {\n      if (!simulationStarted) return;\n      try {\n        const csvFiles = [\"../data/gps_data.csv\", \"../data/sample_real.csv\", \"../data/sample_spoofed.csv\"];\n        const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\n        const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            csv_files: csvFiles,\n            signature\n          })\n        });\n        const data = await res.json();\n        setPlanes(prev => {\n          const updated = {\n            ...prev\n          };\n          const newTargets = {};\n          const newPredictions = {};\n          const newSpeedETA = {};\n          Object.keys(data).forEach(plane => {\n            var _prev$plane;\n            const current = data[plane].current;\n            const predicted = data[plane].predicted;\n            if (!prev[plane]) updated[plane] = {\n              lat: current.lat,\n              lon: current.lon,\n              status: current.status\n            };\n            if (current.status === \"SPOOFED\" && ((_prev$plane = prev[plane]) === null || _prev$plane === void 0 ? void 0 : _prev$plane.status) !== \"SPOOFED\") audioRef.current.play();\n            newTargets[plane] = {\n              lat: current.lat,\n              lon: current.lon,\n              status: current.status\n            };\n            newPredictions[plane] = predicted.map(p => [p.lat, p.lon]);\n            if (!trajectories[plane]) trajectories[plane] = [];\n            trajectories[plane].push([current.lat, current.lon]);\n            if (trajectories[plane].length >= 2 && predicted.length > 0) {\n              const prevPos = trajectories[plane][trajectories[plane].length - 2];\n              const currPos = [current.lat, current.lon];\n              const dist = L.latLng(prevPos).distanceTo(L.latLng(currPos));\n              const speed = dist;\n              const etaDist = L.latLng(currPos).distanceTo(L.latLng(predicted[0]));\n              const eta = (speed > 0 ? etaDist / speed : 0).toFixed(1);\n              newSpeedETA[plane] = {\n                speed: speed.toFixed(1),\n                eta: eta\n              };\n            }\n          });\n          setTargets(newTargets);\n          setTrajectories({\n            ...trajectories\n          });\n          setPredictions(newPredictions);\n          setSpeedETA(newSpeedETA);\n          return updated;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    const interval = setInterval(fetchPlanes, 1000);\n    return () => clearInterval(interval);\n  }, [simulationStarted]);\n\n  // Real-time plane movement\n  useEffect(() => {\n    if (!simulationStarted) return;\n    const interval = setInterval(() => {\n      setPlanes(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(targets).forEach(plane => {\n          const tgt = targets[plane];\n          if (!tgt) return;\n          updated[plane] = {\n            ...tgt\n          };\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [targets, simulationStarted]);\n\n  // Drag planes off trajectory\n  const handleDragEnd = (plane, e) => {\n    const pos = e.target.getLatLng();\n    const planeData = planes[plane];\n    const dist = L.latLng(pos).distanceTo(L.latLng([planeData.lat, planeData.lon]));\n    if (dist > 50000) {\n      setPlanes(prev => ({\n        ...prev,\n        [plane]: {\n          ...prev[plane],\n          status: \"SPOOFED\"\n        }\n      }));\n      alert(`${plane} is off trajectory!`);\n      audioRef.current.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      planes: planes,\n      speedETA: speedETA,\n      selectedPlane: selectedPlane,\n      setSelectedPlane: setSelectedPlane\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"88%\",\n        position: \"relative\"\n      },\n      children: [!simulationStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSimulationStarted(true),\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        },\n        children: \"Start Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: indiaCenter,\n        zoom: 5,\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        zoomControl: true,\n        children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"ESRI Satellite\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BaseLayer, {\n            name: \"Topographic\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), Object.keys(planes).map(plane => {\n          const pos = planes[plane];\n          const pred = predictions[plane] || [];\n          const isSelected = plane === selectedPlane;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Polyline, {\n              positions: trajectories[plane] || [],\n              color: isSelected ? \"purple\" : \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), pred.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: pred,\n              color: \"orange\",\n              dashArray: \"5,10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat, pos.lon],\n              icon: isSelected ? selectedIcon : planeIcon,\n              draggable: true,\n              eventHandlers: {\n                dragend: e => handleDragEnd(plane, e)\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                direction: \"top\",\n                offset: [0, -20],\n                permanent: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: pos.status === \"SAFE\" ? \"green\" : \"red\",\n                    fontWeight: \"bold\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [plane, \": \", pos.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), pos.status === \"SPOOFED\" && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pos.lat + 0.05, pos.lon],\n              icon: alertIcon,\n              interactive: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, plane, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n// HMAC helper\n_s(App, \"E8PHfE0bITCZ41O29kuagHQz6pI=\");\n_c3 = App;\nasync function hashHMAC(message, key) {\n  const enc = new TextEncoder();\n  const keyData = enc.encode(key);\n  const msgData = enc.encode(message);\n  const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, {\n    name: \"HMAC\",\n    hash: \"SHA-256\"\n  }, false, [\"sign\"]);\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Tooltip","Polyline","LayersControl","L","jsxDEV","_jsxDEV","BaseLayer","indiaCenter","planeIcon","Icon","iconUrl","process","env","PUBLIC_URL","iconSize","selectedIcon","alertIcon","Legend","className","children","style","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sidebar","planes","speedETA","selectedPlane","setSelectedPlane","Object","keys","map","plane","info","isSelected","onClick","status","speed","eta","_c2","App","_s","setPlanes","trajectories","setTrajectories","targets","setTargets","predictions","setPredictions","setSpeedETA","simulationStarted","setSimulationStarted","audioRef","Audio","fetchPlanes","csvFiles","signature","hashHMAC","join","res","fetch","method","headers","body","JSON","stringify","csv_files","data","json","prev","updated","newTargets","newPredictions","newSpeedETA","forEach","_prev$plane","current","predicted","lat","lon","play","p","push","length","prevPos","currPos","dist","latLng","distanceTo","etaDist","toFixed","err","console","error","interval","setInterval","clearInterval","tgt","handleDragEnd","e","pos","target","getLatLng","planeData","alert","display","width","position","top","left","transform","zIndex","padding","fontSize","cursor","center","zoom","height","zoomControl","checked","name","url","pred","Fragment","positions","dashArray","icon","draggable","eventHandlers","dragend","direction","offset","permanent","interactive","_c3","message","key","enc","TextEncoder","keyData","encode","msgData","cryptoKey","crypto","subtle","importKey","hash","sig","sign","Array","from","Uint8Array","b","toString","padStart","$RefreshReg$"],"sources":["C:/Users/ACER/BugSquash6-Geoshield/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./App.css\";\r\n\r\nconst { BaseLayer } = LayersControl;\r\nconst indiaCenter = [22.0, 79.0];\r\n\r\n// Plane icons\r\nconst planeIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane.png\", // main plane icon\r\n  iconSize: [32, 32]\r\n});\r\n\r\nconst selectedIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/plane-selected.png\", // selected plane icon\r\n  iconSize: [36, 36]\r\n});\r\n\r\nconst alertIcon = new L.Icon({\r\n  iconUrl: process.env.PUBLIC_URL + \"/alert.png\", // off-trajectory icon\r\n  iconSize: [24, 24]\r\n});\r\n\r\nfunction Legend() {\r\n  return (\r\n    <div className=\"legend\">\r\n      <div><span style={{color:\"green\", fontWeight:\"bold\"}}>● SAFE plane</span></div>\r\n      <div><span style={{color:\"red\", fontWeight:\"bold\"}}>● SPOOFED plane</span></div>\r\n      <div><span style={{color:\"blue\"}}>─ Historical trajectory</span></div>\r\n      <div><span style={{color:\"orange\"}}>─ Predicted path</span></div>\r\n      <div><span>⚠ Alert icon = Off trajectory</span></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sidebar({ planes, speedETA, selectedPlane, setSelectedPlane }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Planes</h3>\r\n      {Object.keys(planes).map(plane => {\r\n        const info = speedETA[plane] || {};\r\n        const isSelected = plane === selectedPlane;\r\n        return (\r\n          <div key={plane} \r\n               className={`plane-item ${isSelected ? \"selected\" : \"\"}`} \r\n               onClick={() => setSelectedPlane(plane)}>\r\n            <strong>{plane}</strong> ({planes[plane].status})\r\n            {info.speed && <div>Speed: {info.speed} m/s</div>}\r\n            {info.eta && <div>ETA: {info.eta}s</div>}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [planes, setPlanes] = useState({});\r\n  const [trajectories, setTrajectories] = useState({});\r\n  const [targets, setTargets] = useState({});\r\n  const [predictions, setPredictions] = useState({});\r\n  const [speedETA, setSpeedETA] = useState({});\r\n  const [selectedPlane, setSelectedPlane] = useState(null);\r\n  const [simulationStarted, setSimulationStarted] = useState(false);\r\n  const audioRef = useRef(new Audio(process.env.PUBLIC_URL + \"/beep.mp3\"));\r\n\r\n  // Fetch plane data from backend\r\n  useEffect(() => {\r\n    const fetchPlanes = async () => {\r\n      if (!simulationStarted) return;\r\n\r\n      try {\r\n        const csvFiles = [\"../data/gps_data.csv\", \"../data/sample_real.csv\", \"../data/sample_spoofed.csv\"];\r\n        const signature = await hashHMAC(csvFiles.join(\",\"), \"supersecretkey\");\r\n\r\n        const res = await fetch(\"http://localhost:5000/live_planes_multi\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ csv_files: csvFiles, signature })\r\n        });\r\n        const data = await res.json();\r\n\r\n        setPlanes(prev => {\r\n          const updated = { ...prev };\r\n          const newTargets = {};\r\n          const newPredictions = {};\r\n          const newSpeedETA = {};\r\n\r\n          Object.keys(data).forEach(plane => {\r\n            const current = data[plane].current;\r\n            const predicted = data[plane].predicted;\r\n\r\n            if (!prev[plane]) updated[plane] = { lat: current.lat, lon: current.lon, status: current.status };\r\n            if (current.status === \"SPOOFED\" && prev[plane]?.status !== \"SPOOFED\") audioRef.current.play();\r\n\r\n            newTargets[plane] = { lat: current.lat, lon: current.lon, status: current.status };\r\n            newPredictions[plane] = predicted.map(p => [p.lat, p.lon]);\r\n\r\n            if (!trajectories[plane]) trajectories[plane] = [];\r\n            trajectories[plane].push([current.lat, current.lon]);\r\n\r\n            if (trajectories[plane].length >= 2 && predicted.length > 0) {\r\n              const prevPos = trajectories[plane][trajectories[plane].length - 2];\r\n              const currPos = [current.lat, current.lon];\r\n              const dist = L.latLng(prevPos).distanceTo(L.latLng(currPos));\r\n              const speed = dist;\r\n              const etaDist = L.latLng(currPos).distanceTo(L.latLng(predicted[0]));\r\n              const eta = (speed > 0 ? etaDist / speed : 0).toFixed(1);\r\n              newSpeedETA[plane] = { speed: speed.toFixed(1), eta: eta };\r\n            }\r\n          });\r\n\r\n          setTargets(newTargets);\r\n          setTrajectories({ ...trajectories });\r\n          setPredictions(newPredictions);\r\n          setSpeedETA(newSpeedETA);\r\n\r\n          return updated;\r\n        });\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(fetchPlanes, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [simulationStarted]);\r\n\r\n  // Real-time plane movement\r\n  useEffect(() => {\r\n    if (!simulationStarted) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setPlanes(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(targets).forEach(plane => {\r\n          const tgt = targets[plane];\r\n          if (!tgt) return;\r\n          updated[plane] = { ...tgt };\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [targets, simulationStarted]);\r\n\r\n  // Drag planes off trajectory\r\n  const handleDragEnd = (plane, e) => {\r\n    const pos = e.target.getLatLng();\r\n    const planeData = planes[plane];\r\n    const dist = L.latLng(pos).distanceTo(L.latLng([planeData.lat, planeData.lon]));\r\n    if (dist > 50000) {\r\n      setPlanes(prev => ({ ...prev, [plane]: { ...prev[plane], status: \"SPOOFED\" } }));\r\n      alert(`${plane} is off trajectory!`);\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar planes={planes} speedETA={speedETA} selectedPlane={selectedPlane} setSelectedPlane={setSelectedPlane} />\r\n\r\n      <div style={{ width: \"88%\", position: \"relative\" }}>\r\n        {!simulationStarted && (\r\n          <button\r\n            onClick={() => setSimulationStarted(true)}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"20px\",\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              zIndex: 1000,\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            Start Simulation\r\n          </button>\r\n        )}\r\n\r\n        <MapContainer center={indiaCenter} zoom={5} style={{ height: \"100vh\", width: \"100%\" }} zoomControl={true}>\r\n          <LayersControl position=\"topright\">\r\n            <BaseLayer checked name=\"OpenStreetMap\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            </BaseLayer>\r\n            <BaseLayer name=\"ESRI Satellite\">\r\n              <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\r\n            </BaseLayer>\r\n            <BaseLayer name=\"Topographic\">\r\n              <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" />\r\n            </BaseLayer>\r\n          </LayersControl>\r\n\r\n          {Object.keys(planes).map(plane => {\r\n            const pos = planes[plane];\r\n            const pred = predictions[plane] || [];\r\n            const isSelected = plane === selectedPlane;\r\n\r\n            return (\r\n              <React.Fragment key={plane}>\r\n                <Polyline positions={trajectories[plane] || []} color={isSelected ? \"purple\" : \"blue\"} />\r\n                {pred.length > 0 && <Polyline positions={pred} color=\"orange\" dashArray=\"5,10\" />}\r\n\r\n                <Marker\r\n                  position={[pos.lat, pos.lon]}\r\n                  icon={isSelected ? selectedIcon : planeIcon}\r\n                  draggable={true}\r\n                  eventHandlers={{ dragend: (e) => handleDragEnd(plane, e) }}\r\n                >\r\n                  <Tooltip direction=\"top\" offset={[0, -20]} permanent>\r\n                    <div style={{ color: pos.status === \"SAFE\" ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                      <div>{plane}: {pos.status}</div>\r\n                    </div>\r\n                  </Tooltip>\r\n                </Marker>\r\n\r\n                {pos.status === \"SPOOFED\" && (\r\n                  <Marker\r\n                    position={[pos.lat + 0.05, pos.lon]}\r\n                    icon={alertIcon}\r\n                    interactive={false}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n          <Legend />\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// HMAC helper\r\nasync function hashHMAC(message, key) {\r\n  const enc = new TextEncoder();\r\n  const keyData = enc.encode(key);\r\n  const msgData = enc.encode(message);\r\n  const cryptoKey = await crypto.subtle.importKey(\r\n    \"raw\",\r\n    keyData,\r\n    { name: \"HMAC\", hash: \"SHA-256\" },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n  const sig = await crypto.subtle.sign(\"HMAC\", cryptoKey, msgData);\r\n  return Array.from(new Uint8Array(sig)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}